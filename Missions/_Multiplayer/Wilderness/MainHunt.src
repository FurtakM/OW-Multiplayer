export
  def_hunters,
  def_hunt_size,
  def_hunt_balance,
  def_hunt_limit,
  def_doctors;


export
  one_hunter,
  hunt_limit,
  size_of_ape_team,
  size_of_hunt_team,
  doctors_in_team,
  hunter_level,
  ape_level,
  ape_stamina,
  to_be_alone,

  people,scorestring;

// reads definitons of multiplayer game (or simulate it in editor version)
function read_multiplayer_and_game_parameters;
  var i,p1,p2;
  begin
// sides and teams definitions for real Multiplayer
    if MultiPlayer then
      begin
        Player_Side= mp_player_side;         // cislo strany za kterou hraje TENTO hrac
        Player_Team= mp_player_team;         // cislo tymu, za ktery hrac hraje

        Side_Positions= mp_sides_positions;  // =[1,0,3,2,0,4,0,0]; ... pro kazdou stranu jeji pozice, 0 - neucastni se
        Side_Teams=  mp_sides_teams;         // =[1,0,1,2,0,2,0,0]; ... pro kazou stranu jeji tym
        Side_Nations= mp_sides_nations;      // =[1,0,1,2,0,1,0,0]; ... pro kazdou stranu jeji narod

        {Positions= mp_positions;}          // =[1,4,3,6];         ... seznam stran na jednotlivych pozicich, 0 - zadna (redundantni, not yet)
        Teams= mp_teams;                     // =[[1,3],[4,6]];     ... seznam seznamu clenu tymu (redundantni)
      end
    else
// sides and teams definitions for testing in editor
      begin
        randomize;

        Player_Side    = 1;
        Player_Team    = 0;

        Side_Positions = [1,3,6,0,0,0,0,7];
        Side_Teams     = [0,0,0,0,0,0,0,0];
        Side_Nations   = [1,3,1,2,2,2,2,2];

        {Positions   = [4,0,2,7];}
        Teams          = [];
      end;

// derived sides and teams informations      
    Side_Count=(Side_Positions diff [0])+0;
    Team_Count=(Side_Teams diff [0])+0;

// game settings for real Multiplayer
    if MultiPlayer then
      begin
//        def_hunters=      GetMultiplayerSetting(0);
        def_hunt_size=    GetMultiplayerSetting(1);
        def_hunt_balance= GetMultiplayerSetting(2);
        def_hunt_limit=   GetMultiplayerSetting(3);
        def_doctors=      GetMultiplayerSetting(4);
      end
    else
// game settings for testing in editor
      begin
// not in multiplayer!!!
        randomize;

//        def_hunters=      1;
        def_hunt_size=    1;
        def_hunt_balance= 1;
        def_hunt_limit=   1;
        def_doctors=      1;
      end;

// derived game settings
    one_hunter    = gametype=36;

    if one_hunter then
      begin
        hunt_limit        = [2$0,3$0,4$0,5$0] [def_hunt_limit+1];
        p1                = [6, 10, 12] [def_hunt_size+1];
        p2                = [2, 4, 6] [def_hunt_size+1];
        size_of_ape_team  = p1 div side_count + p2;
        size_of_hunt_team = size_of_ape_team * (side_count-1);
        doctors_in_team   = [0,(size_of_hunt_team+5) div 6,(size_of_hunt_team+3) div 4] [def_doctors+1];
        hunter_level      = [5, 3, 1] [def_hunt_balance+1];
        ape_level         = [1, 2, 3] [def_hunt_balance+1];
        ape_stamina       = [6, 10, 13] [def_hunt_balance+1];
      end
    else
      begin
        hunt_limit        = [2$0,3$0,4$0,5$0] [def_hunt_limit+1];
        p1                = [10, 15, 20] [def_hunt_size+1];
        p2                = [3, 5, 7] [def_hunt_size+1];
        size_of_hunt_team = p1 div side_count + p2;
        size_of_ape_team  = (size_of_hunt_team+ size_of_hunt_team * (side_count-1))div 2;
        doctors_in_team   = [0,(size_of_hunt_team+5) div 6,(size_of_hunt_team+3) div 4] [def_doctors+1];
        hunter_level      = [5, 3, 1] [def_hunt_balance+1];
        ape_level         = [1, 2, 3] [def_hunt_balance+1];
        ape_stamina       = [6, 10, 13] [def_hunt_balance+1];
      end;

    for i=1 to 8 do
      if Side_Positions[i] then
        to_be_alone:=to_be_alone^i;
  end;



// time limit: 5 mins
// Ape alive: +5 points
// Dead hunter: +5 points

// Killed ape: +1 point
// Lost hunter: -5 points

function prepare_hunter_team(side);
  var i,team;
  begin
    team:=[];
    for i:=1 to size_of_hunt_team do
      begin
        uc_nation:=side_nations[side];
        uc_side:=side;

        hc_name:='';
        if i>size_of_hunt_team-doctors_in_team then
          PrepareScientist(0,hunter_level)
        else
          PrepareSoldier(0,hunter_level);
        hc_gallery:='';
        hc_importance:=0;

        team:=team^[CreateHuman];
      end;
    people:=Replace(people,side,team);
  end;

function prepare_ape_team(side);
  var i,team;
  begin
    team:=[];
    for i:=1 to size_of_ape_team do
      begin
        uc_nation:=nation_nature;
        uc_side:=side;

        hc_name:='';
        hc_attr:=[ape_stamina,14];
        hc_skills:=[ape_level,0,0,0];
        hc_sex:=sex_male;
        hc_class:=class_apeman;
        hc_gallery:='';
        hc_importance:=0;

        team:=team^[CreateHuman];
      end;
    people:=Replace(people,side,team);
  end;

function display_score(alone,t);
  begin
    // zobrazeni skore
    display_strings:=scorestring^'';

    if alone then
      if one_hunter then
        display_strings:=display_strings^['#Hunt-prepare2',alone,alone,t]
      else
        display_strings:=display_strings^['#Hunt-prepare1',alone,alone,t];
  end;

function set_attitudes(alone);
  var i,j;
  begin
    for i:=1 to 8 do
      for j:=1 to 8 do
        if (i=alone)=(j=alone) then
          SetAttitude(i,j,att_friend,true)
        else
          SetAttitude(i,j,att_enemy,true);
  end;

function set_technologies(alone);
  var i;
  begin
    for i:=1 to 8 do
      begin
        if (alone=i)=one_hunter then
          begin
            SetTech(tech_Opto1,i,state_disabled);
            SetTech(tech_Opto2,i,state_disabled);
            SetTech(tech_Opto3,i,state_disabled);
            SetTech(tech_StimDrugs,i,state_disabled);
          end
        else
          begin
            SetTech(tech_Opto1,i,state_researched);
            SetTech(tech_Opto2,i,state_researched);
            SetTech(tech_Opto3,i,state_researched);
            SetTech(tech_StimDrugs,i,state_researched);
          end;
        SetTech(tech_Weap1,i,state_disabled);
        SetTech(tech_Weap2,i,state_disabled);
        SetTech(tech_Weap3,i,state_disabled);
      end;
  end;

function prepare_map_coordinates_more_hunters(alone);
  var best,c,bestc,minv,i,j,n;
  begin
    best=0;

    for n=1 to 40 do
      begin
        c=[];
        for i=1 to side_count-1 do
          c:=c^[RandHexArea(arstartveh,false)];

        minv=10000;
        for i=1 to side_count-1 do
          for j=1 to side_count-1 do
            if i<>j then
              begin
                if GetDistXY(c[i][1],c[i][2],c[j][1],c[j][2])<minv then
                  minv:=GetDistXY(c[i][1],c[i][2],c[j][1],c[j][2]);
              end;
        if minv>best then
          begin
            best:=minv;
            bestc:=c;
          end;
      end;
    coordinates:=[];
    for i=1 to 8 do
      if i=alone then
        coordinates:=coordinates^[[81,57]]
      else if (side_positions[i]=0) then
        coordinates:=coordinates^[[0,0]]
      else
        begin
          coordinates:=coordinates^[bestc[1]];
          bestc:=delete(bestc,1);
        end;
  end;

function prepare_map_coordinates_one_hunter(alone);
  var best,c,bestc,minv,i,j,n;
  begin
    best=0;

    for n=1 to 40 do
      begin
        c=[];
        for i=1 to side_count-1 do
          c:=c^[RandHexArea(arapestart,false)];

        minv=10000;
        for i=1 to side_count-1 do
          for j=1 to side_count-1 do
            if i<>j then
              begin
                if GetDistXY(c[i][1],c[i][2],c[j][1],c[j][2])<minv then
                  minv:=GetDistXY(c[i][1],c[i][2],c[j][1],c[j][2]);
              end;
        if minv>best then
          begin
            best:=minv;
            bestc:=c;
          end;
      end;
    coordinates:=[];
    for i=1 to 8 do
      if i=alone then
        coordinates:=coordinates^[[81,57]]
      else if (side_positions[i]=0) then
        coordinates:=coordinates^[[0,0]]
      else
        begin
          coordinates:=coordinates^[bestc[1]];
          bestc:=delete(bestc,1);
        end;
  end;

function prepare_game(alone);
  var i, t;
  begin
    ResetFog;
    for i:=1 to 8 do
      if Side_Positions[i] then
        if i=alone then
          ChangeSideFog(i,1)
        else
          ChangeSideFog(i,2);

    set_attitudes(alone);
    set_technologies(alone);
    display_score(alone,0$8);
    for i:=1 to 8 do
      if Side_Positions[i] then
        if (i=alone)=(one_hunter) then
          prepare_hunter_team(i)
        else
          prepare_ape_team(i);
    t:=8;
    repeat
      t:=t-1;
      display_score(alone,t*0$1);
      wait(0$1);
    until t=0;
  end;

function run_game(alone);
  var i,un,ape,time,alive,dead,aktsc;
  begin
    if (your_side=alone)<> one_hunter then
      music_nat:=nation_arabian
    else
      music_nat:=Side_Nations[your_side];

    if one_hunter then
      begin
        prepare_map_coordinates_one_hunter(alone);
        for i:=1 to 8 do
          if side_positions[i] then
            if i=alone then
              for un in people[i] do
                PlaceUnitArea(un,arstartveh,false)
            else
              for un in people[i] do
                PlaceUnitXYR(un,coordinates[i][1],coordinates[i][2],15,false);
      end
    else
      begin
        prepare_map_coordinates_more_hunters(alone);
        for i:=1 to 8 do
          if side_positions[i] then
            if i=alone then
              for un in people[i] do
                PlaceUnitArea(un,arapes,false)
            else
              for un in people[i] do
                PlaceUnitXYR(un,coordinates[i][1],coordinates[i][2],4,false);
      end;

    CenterNowOnXY(coordinates[your_side][1],coordinates[your_side][2]);
    display_score(0,0);

    time:=hunt_limit div 0$1;
    repeat
      wait(0$1);
      ape:=FilterAllUnits([f_class,class_apeman])+0;
      time:=time-1;
      display_strings:=['#Hunt-Apes',alone,ape,'#Hunt-Limit',alone,time*0$1];
    until (ape=0)or(time=0);
    
    alive:=FilterAllUnits([f_or,[f_class,class_soldier],[f_class,class_scientistic]])+0;

    if one_hunter then
      begin
        dead:=size_of_hunt_team-alive;
        ape:=size_of_ape_team*(side_count-1)-ape;
        aktsc:=time+ape*30-dead*20;
        scorestring:=scorestring^['#Hunt-score2',alone,alone,time*0$1,ape,dead,0,aktsc];
        SetMultiScore(alone,aktsc);
      end
    else
      begin
        dead:=size_of_hunt_team*(side_count-1)-alive;
        aktsc:=hunt_limit div 0$1-time+ape*30+dead*20;
        scorestring:=scorestring^['#Hunt-score1',alone,alone,hunt_limit-time*0$1,ape,dead,0,aktsc];
        SetMultiScore(alone,aktsc);
      end;

  end;

function close_game(alone);
  var un;
  begin
    for un in all_units do
      DestroyUnit(un);
    ResetFog;
  end;

export function starting_hunt;
  var alone,win,i;
  begin
    mp_selectmsg:=true;
    mp_with_score:=true;

    read_multiplayer_and_game_parameters;
    your_side:=Player_Side;

    while to_be_alone do
      begin
        alone:=to_be_alone[Rand(1,to_be_alone)];
        to_be_alone:=to_be_alone diff alone;
        prepare_game(alone);
        run_game(alone);
        close_game(alone);
      end;
    display_score(0,0);
    wait(0$5);
    win:=true;
    for i:=1 to 8 do
      if GetMultiScore(i)>GetMultiScore(your_side) then
        win:=false;
    if win then
      YouWinInMultiplayer
    else
      YouLostInMultiplayer;

    

  end;

{   // nahodne vyber poradi
    // pro jednotlive hrace (jako opice):
    // - destroyni jednotky vsech hracu na mape, resetni fog
    // - vypis, kdo bude opice a ze hra zacne za 5 secs
    // - umisti opice do stredu mapy
    // - umisti hrace ke krajum mapy
    // - po vyvrazdeni opic nebo vyprseni time limitu (oboji se zobrazuje) konci


    for hunted in order do
      begin
      end;
    prepare_map_coordinates;
    set_attitudes;
    prepare_sides;
    prepare_vehicles;

}
