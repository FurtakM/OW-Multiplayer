// Positions on the map
//   1 2
//   3 4

// game parameters
export  Game_Type;               // type of used games
                                 // 1 - all for free

export  def_base_level,          // (0) 0 - no base, 1 - depot, 2 - fortified, 3 - extra fortified [2]
        def_amount_of_people,    // (1) 0 - few, 1 - medium, 2 - more, 3 - lots
        def_initial_level,       // (2) 0 to 3 [1] ... 2, 3, 4, 5
        def_starting_resources,  // (3) 0 - low, 1 - medium, 2 - high [1]
        def_shipments_density,   // (4) 0 - low, 1 - medium, 2 - high [1]
//        def_extra_oil_deposits,  // (5) bool [false]

        def_shared_vision,       // (10) bool [true]
        def_morale_flags,        // (11) bool [true]
        def_siberite_detection,  // (12) bool [true]
        def_amount_of_apemen,    // (13) 0 - none, 1 - few, 2 - medium, 3 - lots [1]
//        def_people_respawning,   // (14) 0 - no, 1 - rare, 2 - common [1]
        def_siberite_bomb;       // (15) 0 - disabled, 1 - enabled

// derived game parameters
export  is_depot,
        number_of_breastworks,
        number_of_people,
        initial_level,
        starting_crates,
        starting_resources,
        shipments_density,

        spawning_koef_of_apemen,
        respawning_time_min,respawning_time_max;


// multiplayer parameters
export  Side_Count, Team_Count, Player_Side, Player_Team, Side_Teams, Teams;
export  Side_Positions, Side_Nations, Side_Names, Team_Names;

// map parameters
export  depot_def, breastworks_def, start_def,
//        extra_oil_deposits_locations,            // list of extra oils deposites on map
        def_max_sides;                           // max number of sides on this map

export  commander;



// initialization of map specialities as extra oil resources and others
function init_map;
var i;
begin
//  extra_oil_deposits_locations:=[ [53,26], [51,53], [129,20], [155,53], [187,139], [183,107], [106,135], [80,106]];           // list of extra oil deposites

  // list of depots for each positions on the map
  depot_def:=[ [12,8,2], [156,9,3], [83,146,0], [225,149,5] ];
                                                                
  // list of starting people positions
  start_def:=[ [20,15], [154,15], [83,139], [216,141] ];

  // list of breastworks for each base positions on the map
  breastworks_def:=[ [ [46,13,4], [44,39,5], [47,25,5] , [46,43,4] ],
                     [ [129,12,0], [135,38,0], [139,24,0], [158,42,0] ],
                     [ [84,121,4], [109,143,4], [87,126,4], [111,148,4] ],
                     [ [194,146,2], [195,121,1], [193,135,2], [192,116,2] ],
                   ];

  // if not required extra oil deposits, then destroy them
  if not def_extra_oil_deposits then
    for i in extra_oil_deposits_locations do
      RemoveDepositXY(i[1],i[2]);

end;


// reads definitons of multiplayer game
// (or simulate it in editor version)
function read_multiplayer_and_game_parameters;
var side,dep,br1,br2,br3,un,i;
begin
  {Side_Names= mp_side_nations;    // not implemented yet
  Team_Names= mp_side_nations;}

  if MultiPlayer then                      // sides and teams definitions for real Multiplayer
    begin
      Game_Type=mp_game_type;

      Player_Side= mp_player_side;         // cislo strany za kterou hraje TENTO hrac
      Player_Team= mp_player_team;         // cislo tymu, za ktery hrac hraje

      Side_Positions= mp_sides_positions;  // =[1,0,3,2,0,4,0,0]; ... pro kazdou stranu jeji pozice, 0 - neucastni se
      Side_Teams=  mp_sides_teams;         // =[1,0,1,2,0,2,0,0]; ... pro kazou stranu jeji tym
      Side_Nations= mp_sides_nations;      // =[1,0,1,2,0,1,0,0]; ... pro kazdou stranu jeji narod

      Teams= mp_teams;                     // =[[1,3],[4,6]];     ... seznam seznamu clenu tymu (redundantni)
    end
  else
    begin                                  // sides and teams definitions for testing in editor
      Game_Type=2;

      Player_Side    = 4;
      Player_Team    = 2;

      Side_Positions = [0,3,0,1,0,0,4,0];
      Side_Teams     = [0,1,0,2,0,1,2,0];
      Side_Nations   = [0,3,0,1,0,1,3,0];

      Teams          = [[2,7],[6,4]];
    end;

  // derived sides and teams informations
  Side_Count=(Side_Positions diff [0])+0;
  Team_Count=(Side_Teams diff [0])+0;

  // game settings for real Multiplayer
  if MultiPlayer then
    begin
      def_base_level=         GetMultiplayerSetting(0);
      def_amount_of_people=   GetMultiplayerSetting(1);
      def_initial_level=      GetMultiplayerSetting(2);
      def_starting_resources= GetMultiplayerSetting(3);
      def_shipments_density=  GetMultiplayerSetting(4);
      def_extra_oil_deposits= GetMultiplayerSetting(5);

      def_shared_vision=      GetMultiplayerSetting(10);
      def_morale_flags=       GetMultiplayerSetting(11);
      def_siberite_detection= GetMultiplayerSetting(12);
      def_amount_of_apemen=   GetMultiplayerSetting(13);
      def_people_respawning=  GetMultiplayerSetting(14);
      def_siberite_bomb=      GetMultiplayerSetting(14);
    end
  else
    begin                                  // game settings for testing in editor
      randomize;

      def_base_level=         2;
      def_amount_of_people=   1;
      def_initial_level=      1;
      def_starting_resources= 2;
      def_shipments_density=  1;
      def_extra_oil_deposits= 0;

      def_shared_vision=      1;
      def_morale_flags=       1;
      def_siberite_detection= 1;
      def_amount_of_apemen=   3;
      def_people_respawning=  2;
      def_siberite_bomb=      0;
    end;

  // derived game settings
  is_depot                    = [0,1,1,1] [def_base_level+1];
  number_of_breastworks       = [0,0,2,4] [def_base_level+1];
  number_of_people            = [6,9,12,15] [def_amount_of_people+1];
  initial_level               = [2,3,4,5] [def_initial_level+1];
  starting_resources          = [ [0,0,0], [30,0,0], [50,20,0], [80,40,20] ] [def_starting_resources+1];
  starting_crates             = [ [10], [7,14], [6,12,18], [5,10,15,20] ] [def_starting_resources+1];
  shipments_density           = [ 20, 30, 40 ] [def_shipments_density+1];

  // number_of_apemen         = [0,6,12,18] [def_amount_of_apemen+1];
  spawning_koef_of_apemen     = [0, 165,140,115] [def_amount_of_apemen+1];
  respawning_time_min         = [0$0,  4$00, 0$50] [def_people_respawning+1];
  respawning_time_max         = [0$0, 10$00, 2$00] [def_people_respawning+1];
end;

function set_shared_visions_and_alliances;
var i, j;
begin
  if def_shared_vision then
    begin
      for i in Teams do
        for j=2 to i do
          ChangeSideFog( i[j], i[1] );
    end;

  for i=1 to 8 do
    for j=1 to 8 do
      if Side_Teams[i]=Side_Teams[j] then
        SetAttitude(i,j,att_friend,true)
      else
        SetAttitude(i,j,att_enemy,true);
end;


// creates count people with class cl up to r hexes from point x,y
// if commander is set to true, then the first of them has higher importance and level
// returns list of created units
function prepare_people(count,cl,x,y,r, var commander);
var i,un;
begin
  result:=[];
  for i:=1 to count do
    begin
      uc_direction:=Rand(0,5);
      if commander then
        begin
          PrepareHuman(rand(1,2),cl,initial_level+2);
          hc_importance:=105;
          commander:=false;
        end
      else
        begin
          PrepareHuman(rand(1,2),cl,initial_level);
          hc_importance:=0;
        end;

      un:=CreateHuman;
      PlaceUnitXYR(un,x,y,r,false);
      result:=result ^ [un];
    end;
end;


// prepares units of specified side
function prepare_side(side);
var pos,x,y,i,r,
    sol,br,dep,
    neng,nsci,nmech,nsol;
begin
  // position of side
  pos:=Side_Positions[side];

  if not def_siberite_bomb then
    for i=1 to 8 do
      SetTech(tech_SibFiss,i,state_disabled);

  // sets global uc parameters
  uc_nation:=Side_Nations[side];
  uc_side:=side;

  x:=depot_def[pos][1];
  y:=depot_def[pos][2];

  if is_depot then              // create depot and place starting resources to it
    begin
      bc_type=b_depot;
      dep:=CreateAndPlaceBuildingXYD(x,y,Depot_Def[pos][3]);

      SetResourceType(GetBase(dep),mat_cans,starting_resources[mat_cans]);
      SetResourceType(GetBase(dep),mat_oil,starting_resources[mat_oil]);
      SetResourceType(GetBase(result),mat_siberit,starting_resources[mat_siberit]);
    end
  else                          // eventualy only place starting resources
    begin
      for i:=1 to 3 do
        begin
          r:=starting_resources[i];
          while r>=10 do
            if r>50 then
              begin
                CreateResourcesXYR(i,5,x,y,4,false);
                r:=r-50;
              end
            else
              begin
                CreateResourcesXYR(i,r div 10,x,y,4,false);
                r:=0;
              end;
         end;
    end;

  x:=start_def[pos][1];
  y:=start_def[pos][2];

  // create starting crates, in starting_crates are distances from starting position
  for r in starting_crates do
    CreateResourcesXYR(mat_cans,5,x,y,r,false);

  // eventualy place flag
  if def_morale_flags then
    SetBattleFlag(side,x,y,[[bfo_defend_bonus_human,60],[bfo_defend_bonus_vehicle,30],[bfo_defend_bonus_building,0],[bfo_height,100]]);

  // this is common algorithm to divide any amount of people
  neng:=number_of_people;

  // there must be soldier for each breastwork...
  nsol:=number_of_breastworks;
  if nsol<neng div 4 then
    nsol:=neng div 4;

  neng:=neng-nsol;

  // at least one scientist...
  nsci:=neng div 3;
  if nsci<1 then
    nsci:=1;
  neng:=neng-nsci;

  nmech:=neng div 2;
  neng:=neng-nmech;

  // at least one engineer (even if this means to incease amount of people)
  if neng<1 then neng:=1;

  // first will be the commander
  commander:=true;

  // place breastworks and put soldiers to them
  for i:=1 to number_of_breastworks do
    begin
      // place breastwork
      x:=breastworks_def[pos][i][1];
      y:=breastworks_def[pos][i][2];
      bc_type:=b_breastwork;
      br:=CreateAndPlaceBuildingXYD(x,y,breastworks_def[pos][i][3]);

      // select place before breastwork
      x:=ShiftX(x,breastworks_def[pos][i][3],2);
      y:=ShiftY(y,breastworks_def[pos][i][3],2);

      // place soldier on this place
      sol:=prepare_people(1,class_soldier,x,y,0,commander)[1];

      // soldier enters the breastwork
      ComEnterUnit(sol,br);
    end;

  x:=start_def[pos][1];
  y:=start_def[pos][2];

  // place remaining soldiers and other people to the flag
  prepare_people(nsol-number_of_breastworks,class_soldier,x,y,5,commander);
  prepare_people(neng,class_engineer,x,y,5,commander);
  prepare_people(nsci,class_scientistic,x,y,5,commander);
  prepare_people(nmech,class_mechanic,x,y,5,commander);

  if def_siberite_detection then
    SetTech(tech_SibDet,side,state_researched);
end;

// prepare all sides with nonzero position
function prepare_sides;
var i;
begin
  for i:=1 to 8 do
    if Side_Positions[i] then
      prepare_side(i);
end;


starting
begin
  mp_selectmsg:=true;

  //------
  read_multiplayer_and_game_parameters;
  init_map;
  set_shared_visions_and_alliances;
  prepare_sides;

  //------
  init_shipments_and_respawning;
//  prepare_apemen;


  //------
  your_side:=Player_Side;
  ResetFog;
  music_nat:=Side_Nations[your_side];
  CenterNowOnXY(start_def[Side_Positions[your_side]][1],start_def[Side_Positions[your_side]][2]);
end;