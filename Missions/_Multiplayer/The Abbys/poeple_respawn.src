var respawn_queue,
    nation_queue;

export function init_respawn;
begin
  if not def_people_respawning then
    exit;

  // side         1 2 3 4 5 6 7 8
  respawn_queue:=[0,0,0,0,0,0,0,0];      // if side want new character  (0/TIME)
  nation_queue:=[0,0,0,0,0,0,0,0];       // nation of new character (false/nation)

  if Game_Type in [2,12] then Enable(41)
                         else Enable(40);
end;

every 0$10 Marked 40 do
var list,time,side;
begin
  for side=1 to Side_Positions do
    if Side_Positions[side] then
      begin
        list:=FilterAllUnits([ [f_side,side], [f_type,unit_human], f_not, [f_nation,nation_nature] ]);
        if (list<number_of_people) and (not respawn_queue[side]) then
          respawn_queue:=Replace(respawn_queue,side,TICK);

        time:=TICK-respawn_queue[side];
        if (respawn_queue[side]) and (time>respawning_time_min) then
          respawn_character(side,time);
      end;
  enable;
end;

function respawn_character(side,time);
var dep;
begin
  if Rand(0,1) and (time<respawning_time_max) then
    exit;

  dep:=FilterAllUnits([ [f_side,side], [f_or, [f_btype,b_depot], [f_btype,b_warehouse]], [f_ok] ]);
  if not dep then
    exit
  else
    dep:=dep[Rand(1,dep)];

  uc_side:=side;
  uc_nation:=Side_Nations[side];
  PrepareHuman(0,0,skill_level div 2);
  hc_importance:=0;

  PlaceUnitXYR(CreateHuman,GetX(dep),GetY(dep),10,true);

  respawn_queue:=Replace(respawn_queue,side,0);
end;


// Respawning for BigBase game
every 0$10 Marked 41 do
var i,list,time,nation,side,limit;
begin
  if Game_Type=12 then limit:=number_of_people
                  else limit:=2*number_of_people;
  for i=1 to 4 do
    begin
      side:=GetSidePositions([1,1,3,3][i]);

      if Game_Type=12 then nation:=Position_Nations[i]
                      else nation:=Side_Nations[side];

      list:=FilterAllUnits([ [f_side,side],
                             [f_nation,nation],
                             [f_type,unit_human],
                             f_not, [f_nation,nation_nature] ]);

      if (list<limit) and (not respawn_queue[side]) then
        begin
          respawn_queue = Replace(respawn_queue,side,TICK);
          nation_queue  = Replace(nation_queue,side,nation);
        end;

      time:=TICK-respawn_queue[side];
      if (respawn_queue[side]) and (time>respawning_time_min) then
        respawn_character_nation(side,time,nation_queue[side]);
    end;
  enable;
end;

function respawn_character_nation(side,time,nation);
var dep;
begin
  if Rand(0,1) and (time<respawning_time_max) then
    exit;

  dep:=FilterAllUnits([ [f_side,side],
                        [f_nation,nation],
                        [f_or, [f_btype,b_depot],
                               [f_btype,b_warehouse]],
                        [f_ok] ]);
  if not dep then
    dep:=FilterAllUnits([ [f_side,side],
                          [f_or, [f_btype,b_depot],
                                 [f_btype,b_warehouse]],
                          [f_ok] ]);
  if not dep then exit
             else dep:=dep[Rand(1,dep)];

  uc_side:=side;
  uc_nation:=nation;
  PrepareHuman(0,0,skill_level);
  hc_importance:=0;

  PlaceUnitXYR(CreateHuman,GetX(dep),GetY(dep),10,true);

  respawn_queue:=Replace(respawn_queue,side,0);
  nation_queue:=Replace(nation_queue,side,0);
end;

function GetSidePositions(i);
var un,side;
begin
  side:=false;
  for un=1 to Side_Positions do
    if Side_Positions[un]=i then
      begin
        side:=un;
        break;
      end;
  result:=side;
end;