EXPORT
  def_main_base,
  def_secondary_base,
  def_defence_level,
  def_amount_of_people,
  def_initial_level,

  def_main_deposits,
  def_secondary_deposits,
  def_siberite_detection,
  def_starting_resources,
  def_shipments_density,

  def_people_arrivals,
  def_people_loyality,
  def_people_info,

  def_morale_flags,
  def_siberite_bomb,
  def_amount_of_apemen,
//  def_amount_of_apemen,
  def_builduptime,
  def_win_rules,
  def_people_respawning;

EXPORT
  is_depot, // [1..2], 0 - none, 1 - basic, 2 - upgr
  number_of_people, // [1..2]
  number_of_pplants,
  are_mines, // [oil..sib][1..2]
  is_lab,    // 0 - none, 1 - basic, 2 - upgr
  is_fact,   // 0 - none, 1 - basic, 2 - upgr
  is_arm,    // 0 - none, 1 - basic, 2 - upgr

  are_breastworks, // [1..2], list: 0 - none, 1 - basic, 2 - bunker

  deposits,  // [oil..sib][1..2]

  initial_level,
  starting_crates,
  starting_resources,
  shipments_density,

  max_arriving_times,
  text_info,
  fog_info,

  def_bf_params,
  amount_of_apemen,
  siberite_bomb_Delay;
//  number_of_apemen;


EXPORT Positions, Side_Teams, Teams, Side_Comps;
EXPORT Side_Positions, Side_Nations, Team_Game;
EXPORT Position_Sides;
EXPORT second_side, third_nation;

EXPORT
  start_def,
  depots_def,
  breastworks_def,
  labs_def,
  factories_def,
  armories_def,
  pplants_def,
  deposits_def;

export heroes;
var commander;

var global_units,
    global_defined,
    soldiers_created;

var neng,
    nsci,
    nmech,
    nsol;

function mp_sides_comps;
var c,i;
begin
  c = [];
  for i=1 to 8 do
   c = c^Multiplayer_GetPlayerIsComp(i);
  result = c;
end;

function read_multiplayer_and_game_parameters;
var side,dep,br1,br2,br3,un,i;
var u1,u2,pom_tab,p1,p2, tech_level;
begin
  if MultiPlayer then
    begin
      Game_Type= mp_game_type;
      Your_Side= mp_player_side;

      Side_Positions= mp_sides_positions;
      Side_Teams=  mp_sides_teams;
      Side_Nations= mp_sides_nations;
      Side_Comps =     mp_sides_comps;

      Teams= mp_teams;
    end
  else
    begin
      Your_Side    = 3;

      Side_Positions = [0,0,2,0,1,0,0,0];
      Side_Teams     = [0,0,0,0,0,0,0,0];
      Side_Nations   = [0,0,3,0,2,0,0,0];
      Side_Comps =     [0,0,0,0,0,0,0,0];

      Teams          = [];
    end;

  for i:= 1 to 8 do
    if Multiplayer_GetPlayerIsSpec(i) then
    begin
      Side_Positions:= Replace(Side_Positions, i, 0);
      Teams:= Replace(Teams, Side_Teams[i], Teams[Side_Teams[i]] diff i);
    end;

  Position_Sides:= [0,0];

  for i:= 1 to 8 do
    if Side_Positions[i] then
      Position_Sides:= Replace(Position_Sides, Side_Positions[i], i);

  Team_Game:= (Side_Teams diff [0]) > 1;

  p1:=0;
  p2:=0;
  for i:=1 to 8 do
    if Side_Positions[i]=1 then
      p1:=i
    else if Side_Positions[i]=2 then
      p2:=i;
  Positions:=[p1,p2];

  if MultiPlayer then
    begin
      def_main_base          = GetMultiplayerSetting(0);
      def_secondary_base     = GetMultiplayerSetting(1);
      def_defence_level      = GetMultiplayerSetting(2);
      def_amount_of_people   = GetMultiplayerSetting(3);
      def_initial_level      = GetMultiplayerSetting(4);

      def_main_deposits      = GetMultiplayerSetting(5);
      def_secondary_deposits = GetMultiplayerSetting(6);
      def_siberite_detection = GetMultiplayerSetting(7);
      def_starting_resources = GetMultiplayerSetting(8);
      def_shipments_density  = GetMultiplayerSetting(9);

      def_people_arrivals    = GetMultiplayerSetting(10);
      def_people_loyality    = GetMultiplayerSetting(11);
      def_people_info        = GetMultiplayerSetting(12);

      def_morale_flags       = GetMultiplayerSetting(15);
      def_siberite_bomb      = GetMultiplayerSetting(16);
      def_amount_of_apemen  := GetMultiplayerSetting(17);
      def_builduptime        = GetMultiplayerSetting(20);
//      def_game_rules         = GetMultiplayerSetting(21);
      tech_level             = GetMultiplayerSetting(22);
      def_people_respawning  = 0;
      def_win_rules=           0;
    end
  else
    begin
      randomize;

      def_main_base          = 1;
      def_secondary_base     = 1;
      def_defence_level      = 1;
      def_amount_of_people   = 2;
      def_initial_level      = 1;

      def_main_deposits      = 2;
      def_secondary_deposits = 1;
      def_siberite_detection = 1;
      def_starting_resources = 2;
      def_shipments_density  = 70;

      def_people_arrivals    = 3;
      def_people_loyality    = 1;
      def_people_info        = 1;

      def_morale_flags       = 2;
      def_siberite_bomb      = 1;
      def_amount_of_apemen  := 3;
//        def_amount_of_apemen   = 0;
      def_builduptime        = 1;
      def_game_rules         = 0;
      tech_level             = 4;
      def_people_respawning  = 0;
      def_win_rules=           0;
    end;

  InitGameRules;

  if def_game_rules = 0 then
  begin
    if isSGUI then
       setMpTechs()
    else
    begin
      SetMpTechLevel(tech_level + 1);
    end;
  end;

  u1 = [0,1,1,1,2] [def_main_base+1];
  u2 = [0,1,1,2,2] [def_main_base+1];

  is_depot           = [ [0,1,1,2,2] [def_main_base+1],
                         [0,1,1] [def_secondary_base+1] ];
  if is_depot[2] then
    are_breastworks    = [ [[],[u2,u1],[u2,u2,u1],[u2,u2,u1,u1]] [def_defence_level+1],
                           [[],[1],[1,1],[1,1,1]] [def_defence_level+1] ]
  else
    are_breastworks    = [ [[],[u2,u1],[u2,u2,u1],[u2,u2,u1,u1]] [def_defence_level+1],
                           [] ];

  is_fact            = [ [0,0,1,2,2] [def_main_base+1], 0 ];
  is_lab             = [ [0,0,1,1,2] [def_main_base+1], 0 ];
  is_arm             = [ [0,0,1,1,2] [def_main_base+1], 0 ];
  are_mines          = [ [0,0,0,1,1] [def_main_base+1],
                         [0,0,1] [def_secondary_base+1] ];
  number_of_pplants  = [ [0,0,0,1,2] [def_main_base+1], 0 ];

  number_of_people   = [ [5,8,11] [def_amount_of_people+1],
                        ([2,3,4] [def_amount_of_people+1])*is_depot[2] ];
//  number_of_people         := [def_amount_of_people+4, (def_amount_of_people+4/3)*is_depot[2] ];

  initial_level      = [2,3,4,5] [def_initial_level+1];
  starting_resources = [ [ [0,0,0],[0,0,0] ], [ [50,0,0], [20,0,0] ], [ [150,30,0], [60,0,0] ], [ [250,50,10], [100,30,0] ] ] [def_starting_resources+1];
  //shipments_density  = [ 20, 30, 40 ] [def_shipments_density+1];
  shipments_density        := 720 - (def_shipments_density * 2);
  max_arriving_times = [
    [],
    [10, 17, 26, 36, 48, 60],
    [6, 10, 15, 20, 26, 32, 38, 45, 52, 60],
    [4, 6, 9, 12, 16, 20, 24, 28, 32, 36, 40, 45, 50, 55, 60]
  ] [def_people_arrivals+1];
  text_info          = [0, 1, 0, 1] [def_people_info+1];
  fog_info           = [0, 0, 1, 1] [def_people_info+1];

  amount_of_apemen    := [0, 1, 2, 3] [def_amount_of_apemen+1];
  siberite_bomb_Delay := [0,1,30$00,60$00,90$00,120$00] [def_siberite_bomb+1];
//    number_of_apemen   = [0,6,12,18] [def_amount_of_apemen+1];

  deposits           = [ [ [ 1, 0, 1, 2, 0 ] [def_main_deposits+1],
                           [ 0, 1, 1, 0, 2 ] [def_main_deposits+1] ],
                         [ [ 1, 0, 1, 2, 0 ] [def_secondary_deposits+1],
                           [ 0, 1, 1, 0, 2 ] [def_secondary_deposits+1] ] ];

  def_bf_params      = [ [0,0,0,0], [50, 25, 0, 50], [75, 50, 25, 75], [100, 75, 50, 100] ] [def_morale_flags+1];

  prepare_arrivals;

  if def_people_loyality then
    begin
      second_side=
//            1      2      3      4      5      6      7      8
{1}      [ [ [0,0], [4,5], [4,6], [6,7], [4,2], [4,3], [4,2], [4,2] ],
{2}        [ [5,4], [0,0], [5,6], [5,1], [7,3], [5,3], [5,4], [5,4] ],
{3}        [ [6,4], [6,5], [0,0], [6,1], [6,2], [5,1], [6,4], [6,2] ],
{4}        [ [7,6], [1,5], [1,6], [0,0], [1,2], [1,3], [1,2], [1,2] ],
{5}        [ [2,4], [3,7], [2,6], [2,1], [0,0], [2,3], [2,4], [2,4] ],
{6}        [ [3,4], [3,5], [1,5], [3,1], [3,2], [0,0], [3,4], [3,2] ],
{7}        [ [2,4], [4,5], [4,6], [2,1], [4,2], [4,3], [0,0], [4,2] ],
{8}        [ [2,4], [4,5], [2,6], [2,1], [4,2], [2,3], [2,4], [0,0] ] ]
           [positions[1]] [positions[2]];
      SetAttitude(second_side[1],positions[1],att_friend,true);
      SetAttitude(second_side[2],positions[2],att_friend,true);
      if fog_info then
        begin
          ChangeSideFog(second_side[1],positions[1]);
          ChangeSideFog(second_side[2],positions[2]);
        end;
    end
  else
    begin
      pom_tab=
        [1,2,3,4,5,6,7,8] diff
          (positions
           union [4,[5,7,8],6,[1,7,8],2,3,[2,4],[2,4]] [positions[1]]
           union [4,[5,7,8],6,[1,7,8],2,3,[2,4],[2,4]] [positions[2]]);

      second_side=pom_tab[Rand(1,pom_tab)];

      third_nation= [1,2,3] diff side_nations;
      third_nation= third_nation[Rand(1,third_nation)];
    end;

  BuildUpAreas:= [BuildUp1, BuildUp2];
end;

function prepare_map_coordinates;
var side,
    dep2,br2,dep1,br1,lab,fac,arm,pplant,
    un,i,k11,k12,k21,k22;
begin
  start_def=[];
  depots_def=[];
  breastworks_def=[];
  labs_def=[];
  factories_def=[];
  armories_def=[];
  pplants_def=[];
  deposits_def=[];

  k11:=Rand(1,2);
  k12:=Rand(1,2);
  k21:=Rand(1,2);
  k22:=Rand(1,2);
  deposits_def:=[ [ [ [Res111,Res112] [k11], [Res111,Res112] [3-k11] ],
                    [ [Res121,Res122] [k12], [Res121,Res122] [3-k12] ]
                  ],
                  [ [ [Res211,Res212] [k21], [Res211,Res212] [3-k21] ],
                    [ [Res221,Res222] [k22], [Res221,Res222] [3-k22] ]
                  ]
                ];

  for side:=1 to 2 do
    begin
      dep1:=side*10-9;
      dep2:=20+side*4-3;
      br1:=[side*10-8,side*10-7,side*10-6,side*10-5];
      br2:=[20+side*4-2,20+side*4-1,20+side*4];
      lab:=side*10-4;
      fac:=side*10-3;
      arm:=side*10-2;
      pplant:=[side*10-1,side*10];

      depots_def:=depots_def^[[[GetX(dep1),GetY(dep1),GetDir(dep1)],[GetX(dep2),GetY(dep2),GetDir(dep2)]]];
      start_def:=start_def^[[[ShiftX(GetX(Dep1),GetDir(Dep1) mod 6,6),ShiftY(GetY(Dep1),GetDir(Dep1) mod 6,6)],
                             [ShiftX(GetX(Dep2),GetDir(Dep2) mod 6,6),ShiftY(GetY(Dep2),GetDir(Dep2) mod 6,6)]
                            ]
                           ];
      breastworks_def:=breastworks_def^
        [ [ [ [GetX(br1[1]),GetY(br1[1]),GetDir(br1[1])],
              [GetX(br1[2]),GetY(br1[2]),GetDir(br1[2])],
              [GetX(br1[3]),GetY(br1[3]),GetDir(br1[3])],
              [GetX(br1[4]),GetY(br1[4]),GetDir(br1[4])]
            ],
            [ [GetX(br2[1]),GetY(br2[1]),GetDir(br2[1])],
              [GetX(br2[2]),GetY(br2[2]),GetDir(br2[2])],
              [GetX(br2[3]),GetY(br2[3]),GetDir(br2[3])]
            ]
          ]
        ];
      labs_def:=labs_def^[[[GetX(lab),GetY(lab),GetDir(lab)],[]]];
      factories_def:=factories_def^[[[GetX(fac),GetY(fac),GetDir(fac)],[]]];
      armories_def:=armories_def^[[[GetX(arm),GetY(arm),GetDir(arm)],[]]];
      pplants_def:=pplants_def^[ [ [ [GetX(pplant[1]),GetY(pplant[1]),GetDir(pplant[1])],
                                     [GetX(pplant[2]),GetY(pplant[2]),GetDir(pplant[2])]
                                   ],
                                   []
                                 ]
                               ];

    end;

 for un:=1 to 28 do
   DestroyUnit(un);

end;

function prepare_people(count,cl,x,y,r,building);
var i,j,un;
begin
  result:=[];
  for i:=1 to count do
    begin
      uc_direction:=Rand(0,5);
      if commander then
        begin
          hc_name := mp_sides_players_names[uc_side];
          PrepareHuman(Rand(1,2),cl,initial_level+2);
          hc_importance:=105;
          commander:=false;
          If Multiplayer then
          begin
           hc_gallery:= 'MULTIAVATARS';
           hc_face_number:=Multiplayer_GetPlayerSideNum(uc_side);
           hc_sex := Multiplayer_GetPlayerSex(uc_side);
          end;
        end
      else
        begin
          hc_name := '';
          PrepareHuman(rand(1,2),cl,initial_level);
          hc_importance:=0;
          If Multiplayer then
            begin
              hc_gallery:= '';
              hc_face_number:=0;
            end;
        end;

      un:=CreateHuman;

      if global_defined then
        begin
          if (cl = class_soldier) then
            j:= i + soldiers_created
          else
            j:= i;
          CopySkills(global_units[cl][j],un);
          SetAttr(un, attr_speed,   GetAttr( global_units[cl][j], attr_speed)   );
          SetAttr(un, attr_stamina, GetAttr( global_units[cl][j], attr_stamina) );
        end;

      if building then
        PlaceHumanInUnit(un, building)
      else
        PlaceUnitXYR(un, x, y, r, false);

      result:=result ^ [un];
    end;

  if not global_defined then
    if (global_units >= cl) then
      global_units:= Replace(global_units, cl, global_units[cl] ^ result)
    else
      global_units:= Replace(global_units, cl, result);

     if commander then
     begin
       heroes = replace(heroes,uc_side,heroes[uc_side]^un);
       commander:=false;
     end;
end;

function prepare_side_base(side,base);
var pos,x,y,dir,i,r,un,
    br,dep,lab,fact,arm,
    mode,
    coord,
    max;
begin
  if side in [0,9] then
     exit;

  pos:=Side_Positions[side];

  uc_nation:=Side_Nations[side];
  uc_side:=side;

  x:=depots_def[pos][base][1];
  y:=depots_def[pos][base][2];
  dir:=depots_def[pos][base][3];

  if is_depot[base] then
    begin
      if is_depot[base]=1 then
        bc_type=b_depot
      else
        bc_type=b_warehouse;
      dep:=CreateAndPlaceBuildingXYD(x,y,dir);
      SetBName(dep,'@' & side);

      SetResourceType(GetBase(dep),mat_cans,starting_resources[base][mat_cans]);
      SetResourceType(GetBase(dep),mat_oil,starting_resources[base][mat_oil]);
      SetResourceType(GetBase(dep),mat_siberit,starting_resources[base][mat_siberit]);
    end
  else
    begin
      for i:=1 to 3 do
        begin
          r:=starting_resources[base][i];
          while r>=10 do
            if r>50 then
              begin
                CreateResourcesXYR(i,5,x,y,4,false);
                r:=r-50;
              end
            else
              begin
                CreateResourcesXYR(i,r div 10,x,y,4,false);
                r:=0;
              end;
         end;

    end;

  if is_lab[base] then
    begin
      if is_lab[base]=1 then
        begin
          bc_type=b_lab;
          bc_kind1=b_lab_basic;
          bc_kind2=b_lab_basic;
        end
      else
        begin
          bc_type=b_lab_full;
          bc_kind1=b_lab_siberium;
          bc_kind2=b_lab_weapon;
        end;
      lab:=CreateAndPlaceBuildingXYD(labs_def[pos][base][1],labs_def[pos][base][2],labs_def[pos][base][3]);
    end;
  if is_fact[base] then
    begin
      if is_fact[base]=1 then
        bc_type=b_workshop
      else
        bc_type=b_factory;
      fact:=CreateAndPlaceBuildingXYD(factories_def[pos][base][1],factories_def[pos][base][2],factories_def[pos][base][3]);
    end;
  if is_arm[base] then
    begin
      if is_arm[base]=1 then
        bc_type=b_armoury
      else
        bc_type=b_barracks;
      arm:=CreateAndPlaceBuildingXYD(armories_def[pos][base][1],armories_def[pos][base][2],armories_def[pos][base][3]);
    end;

  for i:=1 to number_of_pplants[base] do
    begin
      bc_type=b_oil_power;
      CreateAndPlaceBuildingXYD(pplants_def[pos][base][i][1],pplants_def[pos][base][i][2],pplants_def[pos][base][i][3]);
    end;

  for i:=1 to deposits[base][1] do
    begin
      coord:=RandHexArea(deposits_def[pos][base][i],false);
      CreateDepositXY(coord[1],coord[2],mat_oil);
      if are_mines[base] then
        begin
          bc_type=b_oil_mine;
          SetResourceVisibility(coord[1], coord[2], uc_side);
          CreateAndPlaceBuildingXYD(coord[1],coord[2],0);
        end;
    end;

  for i:=1 to deposits[base][2] do
    begin
      coord:=RandHexArea(deposits_def[pos][base][i+deposits[base][1]],false);
      CreateDepositXY(coord[1],coord[2],mat_siberit);
      if are_mines[base] and def_siberite_detection then
        begin
          bc_type=b_siberite_mine;
          SetResourceVisibility(coord[1], coord[2], uc_side);
          CreateAndPlaceBuildingXYD(coord[1],coord[2],0);
        end;
    end;


  x:=start_def[pos][base][1];
  y:=start_def[pos][base][2];

{    for r in starting_crates do
    CreateResourcesXYR(mat_cans,5,x,y,r,false);}

  if base=1 then
    if def_morale_flags then
      SetBattleFlag(side,x,y,
        [[bfo_defend_bonus_human,def_bf_params[1]],
         [bfo_defend_bonus_vehicle,def_bf_params[2]],
         [bfo_defend_bonus_building,def_bf_params[3]],
         [bfo_range,17],
         [bfo_height,def_bf_params[4]]]);

  if number_of_people[base] then
    begin
      if No_Mechs then
        Mode:= 2
      else
        Mode:= 1;
    
      neng:= number_of_people[base];

      nmech:= neng div [4, 3] [Mode];

      neng:= neng - nmech;

      nsci:= neng div [3, 2] [Mode];

      if (nsci < 1) then
        nsci:= 1;

      neng:= neng - nsci;

      nsol:= [neng div 2, 0] [Mode];

      neng:= neng - nsol;

      if (neng < 1) then
        neng:= 1;
    end
  else
    begin
      neng:=0;
      nsci:=0;
      nmech:=0;
      nsol:=0;
    end;

  commander:=true;

  soldiers_created:=0;
  for i:=1 to are_breastworks[base] do
    begin
      if are_breastworks[base][i]=1 then
        bc_type:=b_breastwork
      else
        bc_type:=b_bunker;

      x:=breastworks_def[pos][base][i][1];
      y:=breastworks_def[pos][base][i][2];
      dir:=breastworks_def[pos][base][i][3];
      br:=CreateAndPlaceBuildingXYD(x,y,dir);
      if bc_type=b_bunker then
        case uc_nation of
          nation_american:
            PlaceWeaponTurret(br,us_machine_gun);
          nation_arabian:
            PlaceWeaponTurret(br,ar_double_machine_gun);
          nation_russian:
            PlaceWeaponTurret(br,ru_heavy_machine_gun);
        end;
      if i<=nsol then
        prepare_people(1,class_soldier,0,0,0,br);
    end;

  x:=start_def[pos][base][1];
  y:=start_def[pos][base][2];

  if nsol>are_breastworks[base] then
    if arm then
      prepare_people(nsol-are_breastworks[base],class_soldier,0,0,0,arm)
    else
      prepare_people(nsol-are_breastworks[base],class_soldier,x,y,5,0);

  if dep then
    prepare_people(neng,class_engineer,0,0,0,dep)
  else
    prepare_people(neng,class_engineer,x,y,5,0);

  if fact then
    prepare_people(nmech,class_mechanic,0,0,0,fact)
  else
    prepare_people(nmech,class_mechanic,x,y,5,0);

  if lab then
    prepare_people(nsci,class_scientistic,0,0,0,lab)
  else
    prepare_people(nsci,class_scientistic,x,y,5,0);

  max=0;
  for un in FilterAllUnits([[f_side,side],[f_type,unit_human]]) do
    begin
      if GetSkill(un,skill_engineering)>max then
        max:=GetSkill(un,skill_engineering);
    end;
  SetBLevel(FilterAllUnits([[f_side,side],[f_type,unit_building]]),max);

  if def_siberite_detection and GetTech(tech_sibdet,side) = state_enabled then
    SetTech(tech_SibDet,side,state_researched);

  if def_siberite_bomb = 1 then
  begin
    SetTech(tech_SibFiss,side,state_enabled);
    SetTech(73,side,state_enabled);
  end
  else
  begin
    SetTech(tech_SibFiss,side,state_disabled);
    SetTech(73,side,state_disabled);
  end;

  SetTech(tech_artifact,side,state_disabled);

  global_defined:= true;
end;

every 0$1 do
if (def_siberite_bomb > 1) then
begin

    wait( siberite_bomb_Delay );  // can't be 0
    EnableSibFiss;
end;

function EnableSibFiss;
var i;
begin
  for i:=1 to 8 do
    if Side_Positions[i] then
      SetTech(tech_SibFiss,i,state_enabled);
end;

function prepare_sides;
var i;
begin
  global_units:=[];
  global_defined:=false;

  for i:=1 to Side_Positions do
    if Side_Positions[i] then
      begin
        prepare_side_base(i,1);
        prepare_side_base(i,2);
      end;
end;

{function prepare_apemen;
  var i, ape_names, n1, n2, ape;
  begin
    if number_of_apemen=0 then
      exit;

    ape_names = ['Ugh','Urgh','Argh','Aargh','Hrumph','Grumph','Ok','Ook','Ooook','Oorg',
                 'Eghrr','Rrrr','Bark','Wraughrr',':-)','Hrgh','Hur','Yeargh'];
    for i:=1 to number_of_apemen do
      begin
        uc_side:=0;
        uc_nation:=nation_nature;

        hc_class:=class_apeman;
        hc_basic_skills:=[1,1,1,1];
        hc_skills:=[initial_level-1, initial_level-1, initial_level-1, initial_level-1];
        hc_attr:=[10,12];
        hc_sex:=sex_male;

        n1:=ape_names[Rand(1,ape_names)];
        repeat
          n2:=ape_names[Rand(1,ape_names)];
        until n1<>n2;
        hc_name:=n1&' '&n2;
        hc_importance:=0;
        hc_agressivity:=Rand(-20,20);

        ape:=CreateHuman;

        if i mod 2 then
          PlaceUnitArea(ape,southapes,false)
        else
          PlaceUnitArea(ape,northapes,false);
     end;

  end;
}

{function Init_Win_Condition;
begin
  Enable(98);
end;             }

starting
begin
  Disable(98);  // YouWin (Team war)

  Disable(400); // SuddenLost
  Disable(401); // SuddenWin

  Disable(600); // Build-Up

  enable_human_prediction:=true;
  mp_selectmsg:=true;
  read_multiplayer_and_game_parameters;
  prepare_map_coordinates;
  ResetFog;
  ClearAllFogForSide(your_side);
  prepare_sides;
//  prepare_apemen;
//  init_shipments_and_respawning;
  Init_Win_Condition;
  InitLimits;
  ShowTimer;

  music_nat:=Side_Nations[your_side];

  if IAmSpec then
    begin
      //PlaceSeeing(0, 0, Your_Side, -32767);
      fogoff(true);
      CenterNowOnXY(109, 61);
      Enable(400);
    end
  else
    begin

      CenterNowOnXY(start_def[Side_Positions[your_side]][1][1],start_def[Side_Positions[your_side]][1][2]);
    end;

  InitApeman;

  if def_builduptime then
    BeginBuildUp;
end;
