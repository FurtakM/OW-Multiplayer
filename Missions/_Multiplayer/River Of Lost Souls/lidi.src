EXPORT ZMIZELI_LIDI;
EXPORT POINTY;

//*********************************************************************
//*************************** objevovani lidi *************************
//*********************************************************************

// nagenerovani lidi na zacatku
EXPORT function vygeneruj_lidi_na_ztraceni;
VAR i,j,k;
VAR pom,pom1;
VAR barva;
begin
  ZMIZELI_LIDI=[];
  for j:=1 to 4 DO
    begin
      pom1=[];
      for k:=1 to 8 do if Side_Positions[k]=j then begin
                                                     barva=k;
                                                     break;
                                                   end;
      for i:=1 to 5 DO
        begin
          if Prob(10) and def_vehicles_too
            then pom=vytvor_nove_auto(barva)
            else pom=vytvor_noveho_cloveka(barva);
          pom1=pom1^pom;
        end;
      ZMIZELI_LIDI=ZMIZELI_LIDI^[pom1];
    end;
  POINTY=[[],[],[],[]];
end;

// vytvoreni noveho clovicka
function vytvor_noveho_cloveka(b);
VAR pom,pom1;
VAR cla;
VAR i;
VAR sidy;
VAR poc;
VAR ah;
VAR pommm;
begin
  if def_other_nation then pom=Rand(1,11)
                      else begin
                             pommm=Rand(1,8);
                              case Side_Nations[b] of
                               nation_american:pom=[1,2,5,6,7,8,9,5] [pommm];
                               nation_arabian:pom=[1,3,4,5,6,7,8,10] [pommm];
                               nation_russian:pom=[1,2,3,5,6,7,8,11] [pommm];
                              end;
                           end;
  case pom of
   1:cla=class_apeman;
   2:cla=class_apeman_engineer;
   3:cla=class_apeman_soldier;
   4:cla=class_apeman_kamikaze;
   5:cla=class_soldier;
   6:cla=class_mechanic;
   7:cla=class_engineer;
   8:cla=class_scientistic;
   9:cla=class_sniper;
   10:cla=class_mortar;
   11:cla=class_bazooker;
  end;

  uc_side=b;
  if pom<=4 then uc_nation=nation_nature
            else begin
                   if def_other_nation then pom1=Rand(1,3)
                                       else pom1=Side_Nations[b];
                   case pom1 of
                    1:uc_nation=nation_american;
                    2:uc_nation=nation_arabian;
                    3:uc_nation=nation_russian;
                   end;
                 end;
  ah=get_human(get_sex,cla,Rand(1,5),'');
  result:=ah;
end;


// vraci cislo creatnuteho humana
function get_human(sex,clas,level,name);
var pom;
begin
  PrepareHuman(sex,clas,level);
  hc_name:=name;
  pom=CreateHuman;
  result:=pom;
end;

// vraci sex daneho vojaka - sance na zenskou 1/5
function get_sex;
begin
  if Prob(20) then result=sex_female
              else result=sex_male;
end;

// vytvoreni noveho auticka
function vytvor_nove_auto(b);
VAR cat;
VAR a;
VAR pom;
VAR av;
begin
  uc_side=b;
  if def_other_nation then cat=Rand(1,3)
                      else case Side_Nations[b] of
                            nation_american:cat=1;
                            nation_arabian:cat=2;
                            nation_russian:cat=3;
                           end;
  case cat of      
   1:begin
       uc_nation=nation_american;
       pom=get_random_design_am;
     end;
   2:begin
       uc_nation=nation_arabian;
       pom=get_random_design_ar;
     end;
   3:begin
       uc_nation=nation_russian;
       pom=get_random_design_ru;
     end;
  end;
  vc_chassis=pom[1];
  vc_engine=pom[2];
  vc_weapon=pom[3];
  vc_control=pom[4];
  av=CreateVehicle;
  result:=av;
end;

// vraceni nahodneho designu auta
function get_random_design_am;
VAR pom1,pom2,pom3,pom4;
VAR aa,aa1,aa2,aa3,aa4;
begin
  pom1=Rand(1,12);
  case pom1 of
   1:aa3=us_machine_gun;
   2:aa3=us_light_gun;
   3:aa3=us_gatling_gun;
   4:aa3=us_double_gun;
   5:aa3=us_heavy_gun;
   6:aa3=us_rocket_launcher;
   7:aa3=us_laser;
   8:aa3=us_double_laser;
   9:aa3=us_radar;
   10:aa3=us_cargo_bay;
   11:aa3=us_crane;
   12:aa3=us_bulldozer;
  end;
  if pom1 in [5,8,12] then pom2=Rand(4,5)        // heavy tracked a morphling
                      else
  if pom1 in [1,9] then pom2=Rand(1,5)           // vsechno
                   else pom2=Rand(2,5);          // vsechno krome light
  case pom2 of
   1:aa1=us_light_wheeled;
   2:aa1=us_medium_wheeled;
   3:aa1=us_medium_tracked;
   4:aa1=us_heavy_tracked;
   5:aa1=us_morphling;
  end;
  if pom2<4 then pom3=Rand(1,3)
            else pom3=Rand(2,3);
  case pom3 of
   1:aa2=engine_solar;
   2:aa2=engine_combustion;
   3:aa2=engine_siberite;
  end;
  pom4=Rand(1,2);
  case pom4 of
   1:aa4=control_manual;
   2:aa4=control_computer;
  end;
  aa=[aa1,aa2,aa3,aa4];
  result=aa;
end;

// vraceni nahodneho designu auta pro araby
function get_random_design_ar;
VAR pom1,pom2,pom3,pom4;
VAR aa,aa1,aa2,aa3,aa4;
begin
  pom1=Rand(1,11);
  case pom1 of
   1:aa3=ar_multimissile_ballista;
   2:aa3=ar_light_gun;
   3:aa3=ar_double_machine_gun;
   4:aa3=ar_gatling_gun;          
   5:aa3=ar_flame_thrower;        
   6:aa3=ar_gun;                  
   7:aa3=ar_rocket_launcher;      
   8:aa3=ar_selfpropelled_bomb;   
   9:aa3=ar_radar;                
   10:aa3=ar_control_tower;
   11:aa3=us_cargo_bay;
  end;
  if pom1 in [1,2,3] then pom2=Rand(1,4)        // vsechno
                     else pom2=Rand(3,4);        // od media nahoru
  case pom2 of
   1:aa1=ar_hovercraft;
   2:aa1=ar_light_trike;
   3:aa1=ar_medium_trike;
   4:aa1=ar_half_tracked;
  end;
  pom3=Rand(1,3);
  case pom3 of
   1:aa2=engine_solar;
   2:aa2=engine_combustion;
   3:aa2=engine_siberite;
  end;
  pom4=Rand(1,2);
  case pom4 of
   1:aa4=control_manual;
   2:aa4=control_apeman;
  end;
  aa=[aa1,aa2,aa3,aa4];
  result=aa;
end;

// vraceni nahodneho designu auta pro rusy
function get_random_design_ru;
VAR pom1,pom2,pom3,pom4;
VAR aa,aa1,aa2,aa3,aa4;
begin
  pom1=Rand(1,10);
  case pom1 of
   1:aa3=ru_heavy_machine_gun;
   2:aa3=ru_gatling_gun;
   3:aa3=ru_gun;
   4:aa3=ru_rocket_launcher;
   5:aa3=ru_heavy_gun;
   6:aa3=ru_rocket;
   7:aa3=ru_time_lapser;
   8:aa3=ru_cargo_bay;
   9:aa3=ru_crane;
   10:aa3=ru_bulldozer;
  end;
  if pom1 in [1,2,3,4] then pom2=Rand(1,4)        // vsechno
                       else pom2=Rand(3,4);        // od media nahoru
  case pom2 of
   1:aa1=ru_medium_wheeled;
   2:aa1=ru_medium_tracked;
   3:aa1=ru_heavy_wheeled;
   4:aa1=ru_heavy_tracked;
  end;
  pom3=Rand(1,2);
  case pom3 of
   1:aa2=engine_combustion;
   2:aa2=engine_siberite;
  end;
  pom4=Rand(1,2);
  case pom4 of
   1:aa4=control_manual;
   2:aa4=control_computer;
  end;
  aa=[aa1,aa2,aa3,aa4];
  result=aa;
end;

// objevovani novych lidi
EVERY 0$1 TRIGGER FilterUnitsInArea(zona,[f_not,[f_side,0]])>0 DO
VAR zony;

VAR pom,i;
VAR UN;
VAR p1,p2;
begin
  zony=[z1,z2,z3,z4,z5,z6,z7,z8,z9,z10,z11,z12,z13,z14,z15,z16,z17,z18,z19,z20];
  for i in zony do
    begin
      pom=FilterUnitsInArea(i,[f_not,[f_side,0]]);
      if pom>0 then
        begin
          p1=GetSide(pom[1]);
          zapis_do_fronty(i,p1);
        end;
    end;
  enable;
end;

// zjisteni pruchodu
EVERY 0$3 DO
VAR poc;
VAR p1,p2;
VAR j,i;
begin
  poc=1;
  for i in POINTY do
    begin
      if i>=chance_find then
        begin
          for j=1 to 8 do
            if Side_Positions[j]=poc then begin
                                            p1=j;
                                            break;
                                          end;
          p2=Side_Nations[j];
          find_clovicka(p1,p2);
        end;
       poc=poc+1;
     end;
  enable;
end;

// zapisovani do front proslych uzlu
function zapis_do_fronty(zo,side);
VAR pom;
begin
  pom=0;
  pom=Side_Positions[side];
  if pom=0 then msg('konec ... chyba');
  case pom of
   1:POINTY=[POINTY[1] union [zo],POINTY[2],POINTY[3],POINTY[4]];
   2:POINTY=[POINTY[1],POINTY[2] union [zo],POINTY[3],POINTY[4]];
   3:POINTY=[POINTY[1],POINTY[2],POINTY[3] union [zo],POINTY[4]];
   4:POINTY=[POINTY[1],POINTY[2],POINTY[3],POINTY[4] union [zo]];
  end;
end;

// nalezeni clovicka
function find_clovicka(side,nat);
VAR pom;
VAR un;
VAR unat;
VAR pomridic;
VAR pozice;
begin
  pozice=Side_Positions[side];
  wait(Rand(1,0$10));
  pom=Rand(1,ZMIZELI_LIDI[pozice]+0);
  un=ZMIZELI_LIDI[pozice][pom];
  SetSide(un,side);
  if GetType(un)=unit_vehicle then
    if GetControl(un)=control_manual then
      if IsDrivenBy(un)=0 then begin
                                 uc_side=side;
                                 uc_nation=nat;
                                 pomridic=get_human(get_sex,class_mechanic,1,'');
                                 PlaceHumanInUnit(pomridic,un);
                               end
                          else begin
                                 pomridic=IsDrivenBy(un);
                                 SetSide(pomridic,side);
                               end;
  if IsDrivenBy(un)>0 then SetTag(IsDrivenBy(un),0)
                      else SetTag(un,0);
  PlaceUnitArea(un,new_people,true);
  case pozice of
   1:begin
       ZMIZELI_LIDI=[ZMIZELI_LIDI[1] diff un,ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
       POINTY=[[],POINTY[2],POINTY[3],POINTY[4]];
     end;
   2:begin
       ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2] diff un,ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
       POINTY=[POINTY[1],[],POINTY[3],POINTY[4]];
     end;
   3:begin
       ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZMIZELI_LIDI[3] diff un,ZMIZELI_LIDI[4]];
       POINTY=[POINTY[1],POINTY[2],[],POINTY[4]];
     end;
   4:begin
       ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZMIZELI_LIDI[4] diff un];
       POINTY=[POINTY[1],POINTY[2],POINTY[3],[]];
     end;
  end;
  wait(1$0);
end;


// pripadne doplnovani lidi
EVERY 1$0 DO
VAR i,k;
VAR pom;
VAR barva;
VAR ZL;
begin
  for i:=1 to 4 do
    if ZMIZELI_LIDI[i]<5 then
      begin
        for k:=1 to 8 do if Side_Positions[k]=i then begin
                                                       barva=k;
                                                       break;
                                                     end;
        if Prob(10) then pom=vytvor_nove_auto(barva)
                    else pom=vytvor_noveho_cloveka(barva);
        ZL=ZMIZELI_LIDI[i]^pom;
        case i of
         1:ZMIZELI_LIDI=[ZL,ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
         2:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZL,ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
         3:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZL,ZMIZELI_LIDI[4]];
         4:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZL];
        end;
      end;
  enable;
end;

// zobrazovani display - kolik jich je potreba
EVERY 0$3 DO
VAR i;
VAR poz;
VAR txt,text;
begin
  for i:=1 to 8 do
    begin
      poz=Side_Positions[i];
      if poz>0 and Your_Side=i then
        begin
          txt=POINTY[poz]+0;
          text= txt & ' of ' & chance_find & ' points found';
          ExtraStrings=[text];
        end;
    end;
  enable;
end;

//*********************************************************************
//*************************** mizeni lidi *****************************
//*********************************************************************

// mizeni lidi
EVERY 0$3 TRIGGER chance_loose<>0 DO
VAR i,j;
VAR pom,pom1;
VAR apes;
VAR zo;
VAR dist;
VAR zmena;
begin
  apes=[class_apeman,class_apeman_engineer,class_apeman_kamikaze,class_apeman_soldier];
  for i:=1 to 8 do
    begin
      case Side_Positions[i] of
       1:zo=Base1;
       2:zo=Base2;
       3:zo=Base3;
       4:zo=Base4;
       else continue;
      end;
      pom=FilterUnitsExceptArea(zo,[[f_side,i],[f_type,unit_human]]);
      pom1=FilterUnitsExceptArea(zo,[[f_side,i],[f_type,unit_vehicle]]);
      for j in pom1 do if IsDrivenBy(j)<>0 then pom=pom^IsDrivenBy(j);
      for j in pom do if GetClass(j) in apes then pom=pom diff j;
      for j in pom do
        begin
          dist=GetDistUnitArea(j,zo);
          case dist of
           1..5:zmena=1;
           5..10:zmena=2;
           10..15:zmena=3;
           15..25:zmena=4;
           25..35:zmena=5;
           else zmena=6;
          end;
          SetTag(j,GetTag(j)+zmena);
          if GetTag(j)>chance_loose then begin
                                           SetTag(j,0);
                                           odeber_jednotku(j);
                                         end;
        end;
    end;
  enable;
end;

// odebrani jednotky a pridani na urcitou stranu
function odeber_jednotku(jedn);
VAR pom;
begin
  if IsInUnit(jedn) then
    if GetType(IsInUnit(jedn))=unit_vehicle then
      if def_vehicles_too then jedn=IsInUnit(jedn);
  if def_other_nation and Prob(25)
    then pom=Rand(1,4)
    else pom=Side_Positions[GetSide(jedn)];
  case pom of
   1:ZMIZELI_LIDI=[ZMIZELI_LIDI[1]^jedn,ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
   2:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2]^jedn,ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]];
   3:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZMIZELI_LIDI[3]^jedn,ZMIZELI_LIDI[4]];
   4:ZMIZELI_LIDI=[ZMIZELI_LIDI[1],ZMIZELI_LIDI[2],ZMIZELI_LIDI[3],ZMIZELI_LIDI[4]^jedn];
  end;
  RemoveUnit(jedn);
end;

// ubyvani tagu v zakladnach
EVERY 0$5 TRIGGER chance_loose<>0 DO
VAR i,j;
VAR pom,pom1;
VAR apes;
VAR zo;
begin
  apes=[class_apeman,class_apeman_engineer,class_apeman_kamikaze,class_apeman_soldier];
  for i:=1 to 8 do
    begin
      case Side_Positions[i] of
       1:zo=Base1;
       2:zo=Base2;
       3:zo=Base3;
       4:zo=Base4;
       else continue;
      end;
      pom=FilterUnitsInArea(zo,[[f_side,i],[f_type,unit_human]]);
      pom1=FilterUnitsInArea(zo,[[f_side,i],[f_type,unit_vehicle]]);
      for j in pom1 do if IsDrivenBy(j)<>0 then pom=pom^IsDrivenBy(j);
      for j in pom do if GetClass(j) in apes then pom=pom diff j;
      for j in pom do if GetTag(j)>0 then SetTag(j,GetTag(j)-1);
    end;
  enable;
end;
