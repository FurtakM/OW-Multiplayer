export
  game_type,

  def_amount_of_people,
  def_initial_level,
  def_nations,
  def_oil_deposits,
  def_sib_deposits,
  def_shipments_density,
  def_amount_of_apemen,

  def_shared_vision,     
  def_siberite_detection,

  def_artefacts_to_win,
  def_gate_opens_interval
  ;

EXPORT Side_Count, Team_Count, Player_Side, Player_Team, Side_Teams, Teams;
EXPORT Side_Positions, Side_Nations, Side_Names, Team_Names, Positions;

export
  people,apemen;

export x1,y1,x2,y2,dx,dy;

export crates,
       time_index,time1,time2,
       LeftPoints,RightPoints,
       artx,arty,artu;

export
  npeople,
  level_bonus,
  shipments_density,
  noildeposits,
  nsibdeposits,
  ncans,
  napemen,
  interval,
  pointstowin;


// reads definitons of multiplayer game
// (or simulate it in editor version)
function read_multiplayer_and_game_parameters;
  var i, tech_level;
  begin
// sides and teams definitions for real Multiplayer
    if MultiPlayer then
      begin
        game_type=mp_game_type;

        Player_Side= mp_player_side;         // cislo strany za kterou hraje TENTO hrac
        Player_Team= mp_player_team;         // cislo tymu, za ktery hrac hraje

        Side_Positions= mp_sides_positions;  // =[1,0,3,2,0,4,0,0]; ... pro kazdou stranu jeji pozice, 0 - neucastni se
        Side_Teams=  mp_sides_teams;         // =[1,0,1,2,0,2,0,0]; ... pro kazou stranu jeji tym
        Side_Nations= mp_sides_nations;      // =[1,0,1,2,0,1,0,0]; ... pro kazdou stranu jeji narod

        {Positions= mp_positions;}          // =[1,4,3,6];         ... seznam stran na jednotlivych pozicich, 0 - zadna (redundantni, not yet)
        Teams= mp_teams;                     // =[[1,3],[4,6]];     ... seznam seznamu clenu tymu (redundantni)
      end
    else
// sides and teams definitions for testing in editor
      begin
        game_type      = 1;

        Player_Side    = 4;
        Player_Team    = 2;

        Side_Positions = [0,0,0,2,0,1,0,0];
        Side_Teams     = [0,0,0,0,0,0,0,0];
        Side_Nations   = [0,0,0,2,0,3,0,0];

        {Positions   = [4,0,2,7];}
        Teams          = [];
      end;

// derived sides and teams informations
    Positions=[0,0];
    for i := 1 to Side_Positions do
      if Side_Positions[i] then
        begin
          Positions:=Replace(Positions,Side_Positions[i],i);
        end;

    Side_Count=(Side_Positions diff [0])+0;
    Team_Count=(Side_Teams diff [0])+0;

// game settings for real Multiplayer
    if MultiPlayer then
      begin
        def_amount_of_people=   GetMultiplayerSetting(1);
        def_initial_level=      GetMultiplayerSetting(2);
        def_nations=            GetMultiplayerSetting(3);
        def_shipments_density=  GetMultiplayerSetting(4);

        def_oil_deposits=       GetMultiplayerSetting(5);
        def_sib_deposits=       GetMultiplayerSetting(6);

        def_shared_vision=      GetMultiplayerSetting(10);
        def_siberite_detection= GetMultiplayerSetting(12);
        def_amount_of_apemen=   GetMultiplayerSetting(13);

        def_artefacts_to_win=   GetMultiplayerSetting(15);
        def_gate_opens_interval=GetMultiplayerSetting(16);

        tech_level =            GetMultiplayerSetting(22);
      end
    else
// game settings for testing in editor
      begin
        randomize; // not in multiplayer!!!

        def_amount_of_people=   2;
        def_initial_level=      1;
        def_nations=            3;
        def_shipments_density=  1;

        def_oil_deposits=       1;
        def_sib_deposits=       0;

        def_shared_vision=      1;
        def_siberite_detection= 1;
        def_amount_of_apemen=   2;

        def_artefacts_to_win=   2;
        def_gate_opens_interval=0;

        tech_level =            4;
      end;

    if isSGUI then
       setMpTechs()
    else
    begin
      SetMpTechLevel(tech_level + 1);
    end;

// derived game settings
    npeople                     = [9,12,15] [def_amount_of_people+1];
    level_bonus                 = [0,1,2] [def_initial_level+1];
//    shipments_density           = [ 15, 25, 35 ] [def_shipments_density+1];
  shipments_density           := 20 + (def_shipments_density)*28;
    noildeposits                = [1,2,3] [def_oil_deposits+1];
    nsibdeposits                = [1,2] [def_sib_deposits+1];
//  ncans                       = [0,2,5,9] [def_starting_crates+1];
    ncans                       = 0;
    napemen                     = [0,2,4,6] [def_amount_of_apemen+1];
    interval                    = [5$0,7$0,10$0,15$0,25$0,40$0] [def_gate_opens_interval+1];
    pointstowin                 = [1,2,3,4,5,6,7,8,9] [def_artefacts_to_win+1];

    case def_nations of
      0: Side_Nations=[1,1,1,1,1,1,1,1];
      1: Side_Nations=[3,3,3,3,3,3,3,3];
      2: Side_Nations=[2,2,2,2,2,2,2,2];
      3:;
      4: Side_Nations=[0,0,0,0,0,0,0,0];
    end;
  end;

function prepare_definitions;
  var i;
  begin
  // 1 - 9 people
  // 2 - 12 people
  // 3 - 15 people
    people=[
      [1,3,'Dr. Jones',class_soldier,sex_male,[12,11],[4,2,2,3],nation_american],
      [1,4,'Dr. Croft',class_soldier,sex_female,[11,12],[4,1,3,1],nation_american],
      [2,13,'Sgt. Li',class_soldier,sex_female,[10,11],[3,1,2,1],nation_russian],
      [3,5,'Sgt. Black',class_soldier,sex_male,[11,10],[4,1,1,1],nation_arabian],
      [1,6,'Dongo',class_engineer,sex_male,[16,8],[2,4,0,0],nation_arabian],
      [1,7,'Bongo',class_engineer,sex_male,[10,10],[1,4,1,0],nation_russian],
      [2,14,'Chicken',class_engineer,sex_female,[8,12],[0,3,2,1],nation_american],
      [1,8,'Swan',class_mechanic,sex_male,[10,10],[1,1,3,1],nation_arabian],
      [1,15,'Flash',class_mechanic,sex_female,[11,11],[1,1,4,0],nation_american],
      [2,10,'Red',class_mechanic,sex_male,[12,10],[0,3,3,0],nation_arabian],
      [3,9,'Roadkill',class_mechanic,sex_male,[9,10],[2,2,2,2],nation_russian],
      [1,12,'Dr. Olyenko',class_scientistic,sex_male,[11,10],[1,1,0,3],nation_russian],
      [1,16,'Dr. Olyenko',class_scientistic,sex_female,[10,11],[1,1,2,3],nation_russian],
      [1,11,'Dr. Wuzashi',class_scientistic,sex_male,[12,10],[3,0,0,3],nation_arabian],
      [3,17,'Dr. Winston',class_scientistic,sex_female,[8,6],[0,0,0,4],nation_american]];

    apemen=[-5,5,-10,10,-15,15];

    time_index=0;
    LeftPoints=0;
    RightPoints=0;
    artx:=-1;
    artu:=0;

  end;

function prepare_map;
  var i,coord;
  begin
    for i:=1 to noildeposits do
      begin
        coord:=RandHexArea(Deposits,false);
        CreateDepositXY(coord[1],coord[2],mat_oil);
        CreateDepositXY(coord[1]+dx,coord[2]+dy,mat_oil);
      end;
    for i:=1 to nsibdeposits do
      begin
        coord:=RandHexArea(Deposits,false);
        CreateDepositXY(coord[1],coord[2],mat_siberit);
        CreateDepositXY(coord[1]+dx,coord[2]+dy,mat_siberit);
      end;
    for i:=1 to ncans do
      begin
        repeat until new_crate(false);
      end;
    ResetFog;
    for i:=1 to Side_Positions do
      if Side_Positions[i]=1 then
        HideArea(i,Ar1)
      else if Side_Positions[i]=2 then
        HideArea(i,Ar2);
  end;

function prepare_team(ar,side);
  var sk,bsk,c,i,def;
  begin
    uc_side:=side;
    uc_nation:=Side_Nations[side];
    uc_direction:=0;

    hc_importance:=110;

    for def in people do
      if def[1]<=def_amount_of_people+1 then
        begin
          if not Side_Nations[side] then
            uc_nation:=def[8];

          if def[2]<=4 then
            hc_importance:=105
          else
            hc_importance:=0;
          hc_gallery:='multi';
          hc_face_number:=def[2];
          hc_name:=def[3];
          hc_class:=def[4];
          hc_sex:=def[5];
          hc_attr:=def[6];
          sk:=[];
          bsk:=[];
          for i:=1 to 4 do
            begin
              c:=def[7][i]+level_bonus;
              sk:=sk^c;
              bsk:=bsk^c;
            end;
          hc_basic_skills:=bsk;
          hc_skills:=sk;
          PlaceUnitArea(CreateHuman,ar,false);
        end;

    if def_siberite_detection and GetTech(tech_sibdet,side) = state_enabled then
         SetTech(tech_SibDet,side,state_researched);

    SetTech(tech_matdet,side,state_disabled);
    SetTech(tech_matpred,side,state_disabled);
    SetTech(tech_sibfiss,side,state_disabled);
  end;

function prepare_apes;
  var i,ape1,ape2;
  begin
    for i:=1 to napemen do
      begin
        uc_side=0;
        uc_nation=nation_nature;
        hc_class=class_apeman;
        hc_skills=[0,0,0,0];
        hc_attr=[12,10];
        hc_importance=0;
        hc_agressivity=apemen[i];
        ape1=CreateHuman;
        ape2=CreateHuman;
        PlaceUnitArea(ape1,Apes,false);
        PlaceUnitXY(ape2,GetX(ape1)+dx,GetY(ape1)+dy,false);
      end;
  end;

function prepare_teams;
  var i;
  begin
    prepare_apes;
    for i:=1 to side_positions do
      if Side_Positions[i]=1 then
        prepare_team(Stone1in,i)
      else if Side_Positions[i]=2 then
        prepare_team(Stone2in,i);
 end;

var i;
starting
  begin
    x1=28;y1=55;
    x2=100;y2=55;
    dx=x2-x1;dy=y2-y1;
    disable_prediction:=true;


    read_multiplayer_and_game_parameters;
    your_side:=player_side;
    prepare_definitions;
    prepare_teams;
    prepare_map;


    music_nat:=Side_Nations[your_side];

    if Side_Positions[your_side]=1 then
      CenterNowOnXY(74,130)
    else
      CenterNowOnXY(74+dx,130+dy);

  end;