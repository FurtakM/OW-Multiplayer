// Positions on the map
//   1 2
//   3 4

// game parameters
export  Game_Type;               // 1 - forest war


export  def_base_level,          // (0) 0 - no base, 1 - depot, 2 - fortified, 3 - extra fortified [2]
        def_amount_of_people,    // (1) 0 - few, 1 - medium, 2 - more, 3 - lots
        def_initial_level,       // (2) 0 to 3 [1] ... 2, 3, 4, 5
        def_starting_resources,  // (3) 0 - low, 1 - medium, 2 - high [1]
        def_shipments_density,   // (4) 0 - low, 1 - medium, 2 - high [1]
        def_extra_oil_deposits,  // (5) bool [false]

        def_shared_vision,       // (10) bool [true]
        def_morale_flags,        // (11) bool [true]
        def_siberite_detection,  // (12) bool [true]
        def_amount_of_apemen,    // (13) 0 - none, 1 - few, 2 - medium, 3 - lots [1]
        def_people_respawning,   // (14) 0 - no, 1 - rare, 2 - common [1]
        def_siberite_bomb,       // (15) 0 - disabled, 1 - enabled
        def_builduptime;         // (20) 0 - disabled, 5-15 minutes

// derived game parameters
export  is_depot,
        number_of_breastworks,
        number_of_people,
        initial_level,
        amount_of_apemen,
        starting_crates,
        starting_resources,
        shipments_density,
        siberite_bomb_Delay,

        spawning_koef_of_apemen,
        respawning_time_min,respawning_time_max,
        def_win_rules;


// multiplayer parameters
export  Side_Count, Team_Count, Player_Side, Player_Team, Side_Teams, Teams; 
export  Side_Positions, Side_Nations, Side_Names, Team_Names, Team_Game, Side_Comps;

// map parameters
export  depot_def,start_def,
        extra_oil_deposits_locations;            // list of extra oils deposites on map
//        def_max_sides;                           // max number of sides on this map

export heroes;
export  commander,
        battle_flags_id,
        morale_decreasing_time;

var global_units,
    global_defined,
    soldiers_created;

function mp_sides_comps;
var c,i;
begin
  c = [];
  for i=1 to 8 do
   c = c^Multiplayer_GetPlayerIsComp(i);
  result = c;
end;

// osazeni patricne plochy lesem
function create_forest;
var area;
begin
  PlaceTreesToArea(BigForest,[21,22,24,21,22,24,38,39],Rand(500,570),50,2);
  if def_base_level then
    area:=bush_forest_small
  else
    area:=bush_forest_big;
  PlaceTreesToArea(area,[38,39,37],Rand(300,350),10,3);
  PlaceTreesToArea(BigForest,[38,39,37],80,10,3);
end;

// tvorba lozisek ropy a siberitu
function create_map_resources;
var un,
    oil_pos,
    sib_pos;
begin
  oil_pos:=[ [24,10], [82,9], [79,115], [135,112] ];
  sib_pos:=[ [24,29], [102,29], [60,93], [134,91] ];
  for un=1 to 4 do
    begin
      CreateDepositXY(oil_pos[un][1],oil_pos[un][2],mat_oil);
      CreateDepositXY(sib_pos[un][1],sib_pos[un][2],mat_siberit);
    end;
end;

// initialization of map specialities as extra oil resources and others
function init_map;
var i;
begin
  extra_oil_deposits_locations:=[ [38,6], [67,6], [94,115], [116,99] ];      // list of extra oil deposites

  create_forest;
  create_map_resources;


  // list of depots for each positions on the map
  depot_def:=[ [12,10,2], [97,10,3], [64,108,0], [146,110,5] ];

  // list of starting positions for people
  if def_base_level then start_def:=[ [16,14], [96,13], [65,105], [141,105] ]
                    else start_def:=[ [7,5], [98,6], [63,113], [151,113] ];
end;


// reads definitons of multiplayer game
function read_multiplayer_and_game_parameters;
var side,dep,br1,br2,br3,un,i, tech_level;
begin
  {Side_Names= mp_side_nations;    // not implemented yet
  Team_Names= mp_side_nations;}

  if MultiPlayer then                      // sides and teams definitions for real Multiplayer
    begin
      Game_Type=mp_game_type;

      Player_Side= mp_player_side;         // cislo strany za kterou hraje TENTO hrac
      Player_Team= mp_player_team;         // cislo tymu, za ktery hrac hraje

      Side_Positions= mp_sides_positions;  // =[1,0,3,2,0,4,0,0]; ... pro kazdou stranu jeji pozice, 0 - neucastni se
      Side_Teams=  mp_sides_teams;         // =[1,0,1,2,0,2,0,0]; ... pro kazou stranu jeji tym
      Side_Nations= mp_sides_nations;      // =[1,0,1,2,0,1,0,0]; ... pro kazdou stranu jeji narod
      Side_Comps =     mp_sides_comps;

      Teams= mp_teams;                     // =[[1,3],[4,6]];     ... seznam seznamu clenu tymu (redundantni)
    end
  else
    begin                                  // sides and teams definitions for testing in editor
      Game_Type=2;

      Player_Side    = 4;              

      Side_Positions = [0,3,0,1,0,2,4,0];
      Side_Teams     = [0,1,0,2,0,1,2,0];
      Side_Nations   = [0,3,0,2,0,1,3,0];
      Side_Comps =     [0,0,0,0,0,0,0,0];

      Teams          = [[2,6],[4,7]];
    end;

  // derived sides and teams informations
  Side_Count=(Side_Positions diff [0])+0;
  Team_Count=(Side_Teams diff [0])+0;

  // game settings for real Multiplayer
  if MultiPlayer then
    begin
      def_base_level=         GetMultiplayerSetting(0);
      def_amount_of_people=   GetMultiplayerSetting(1);
      def_initial_level=      GetMultiplayerSetting(2);
      def_starting_resources= GetMultiplayerSetting(3);
      def_shipments_density=  GetMultiplayerSetting(4);
      def_extra_oil_deposits= GetMultiplayerSetting(5);

      def_shared_vision=      GetMultiplayerSetting(10);
      def_morale_flags=       GetMultiplayerSetting(11);
      def_siberite_detection= GetMultiplayerSetting(12);
      def_amount_of_apemen=   GetMultiplayerSetting(13);
      def_people_respawning=  GetMultiplayerSetting(14);
      def_siberite_bomb=      GetMultiplayerSetting(15);
      def_win_rules=          0;
      def_builduptime=        GetMultiplayerSetting(20);

      tech_level =            GetMultiplayerSetting(22);
    end
  else
    begin                                  // game settings for testing in editor
      randomize;

      def_base_level=         0;
      def_amount_of_people=   1;
      def_initial_level=      1;
      def_starting_resources= 2;
      def_shipments_density=  1;
      def_extra_oil_deposits= 0;

      def_shared_vision=      1;
      def_morale_flags=       1;
      def_siberite_detection= 1;
      def_amount_of_apemen=   3;
      def_people_respawning=  2;
      def_siberite_bomb=      0;
      def_win_rules=          0;
      def_builduptime:=       1;

      tech_level =            4;
    end;


    if isSGUI then
       setMpTechs()
    else
    begin
      SetMpTechLevel(tech_level + 1);
    end;

  // derived game settings
  is_depot                    = [0,1,1,1] [def_base_level+1];
  number_of_breastworks       = [0,0,0,0] [def_base_level+1];
  number_of_people            = [9,12,15,24] [def_amount_of_people+1];
  initial_level               = [2,3,4,5] [def_initial_level+1];
  starting_resources          = [ [0,0,0], [30,0,0], [50,20,0], [80,40,20] ] [def_starting_resources+1];
  starting_crates             = [ [10], [7,14], [6,12,18], [5,10,15,20] ] [def_starting_resources+1];
  shipments_density           = [ 20, 30, 40 ] [def_shipments_density+1];

  amount_of_apemen           := [0, 1, 2, 3] [def_amount_of_apemen+1];
  spawning_koef_of_apemen     = [0, 165,140,115] [def_amount_of_apemen+1];
  respawning_time_min         = [0$0,  4$00, 0$50] [def_people_respawning+1];
  respawning_time_max         = [0$0, 10$00, 2$00] [def_people_respawning+1];
  siberite_bomb_Delay        := [0,1,30$00,60$00,90$00,120$00] [def_siberite_bomb+1];

  morale_decreasing_time      = [ -1, 0$10, 0$20, 0$40, 0$0 ] [def_morale_flags+1];
  battle_flags_id             = [];

end;



function set_shared_visions_and_alliances;
var i, j;
begin
  Team_Game:=0;
  for i=1 to 8 do
    Team_Game:=Team_Game + Side_Teams[i];

  if not Team_Game then
    Team_Game:=false
  else
    Team_Game:=true;

  if not Team_Game then
    begin
      for i=1 to 8 do
        for j=1 to 8 do
          if i<>j then
            SetAttitude(i,j,att_neutral,true)
          else
            SetAttitude(i,j,att_friend,true);
    end
  else
    begin
      if def_shared_vision then
        begin
          for i in Teams do
            for j=2 to i do
              ChangeSideFog( i[j], i[1] );
        end;

      for i=1 to 8 do
        for j=1 to 8 do
          if Side_Teams[i]=Side_Teams[j] then
            SetAttitude(i,j,att_friend,true)
          else
            SetAttitude(i,j,att_enemy,true);
    end;
end;


// creates count people with class cl up to r hexes from point x,y
// if commander is set to true, then the first of them has higher importance and level
// returns list of created units
function prepare_people(side,count,cl,x,y,r, var commander);
var i,j,un;
begin
  result:=[];
  for i:=1 to count do
    begin
      uc_direction:=Rand(0,5);
      if commander then
        begin
          hc_name := mp_sides_players_names[side];
          PrepareHuman(Rand(1,2),cl,initial_level+2);
          hc_importance:=105;
          commander:=false;
          If Multiplayer then
          begin
           hc_gallery:= 'MULTIAVATARS';
           hc_face_number:=Multiplayer_GetPlayerSideNum(Side);
           hc_sex := Multiplayer_GetPlayerSex(Side);
          end;
        end
      else
        begin
          hc_name := '';
          PrepareHuman(rand(1,2),cl,initial_level);
          hc_importance:=0;
          If Multiplayer then
          begin
           hc_gallery:= '';
           hc_face_number:=0;
          end;
        end;

      un:=CreateHuman;

      if global_defined then
        begin
          j:=i;
          if cl=class_soldier then
            j:=i+soldiers_created;
          CopySkills(global_units[cl][j],un);
          SetAttr(un, attr_speed,   GetAttr( global_units[cl][j], attr_speed)   );
          SetAttr(un, attr_stamina, GetAttr( global_units[cl][j], attr_stamina) );
        end;

      PlaceUnitXYR(un,x,y,r,false);
      result:=result ^ [un];
    end;

  if not global_defined then
    if cl=class_soldier and global_units then
      global_units:=[ global_units[1] ^ result ]
    else
      global_units:=global_units ^ [result];

     if commander then
     begin
       heroes = replace(heroes,uc_side,heroes[uc_side]^un);
       commander:=false;
     end;
end;


function prepare_buldozer(x,y,r,pos);
var nation;
begin
  if uc_nation=2 then
    begin
      nation:=uc_nation;
      uc_nation:=1;
    end
  else
    nation:=false;

  vc_engine   = engine_combustion;
  vc_control  = control_manual;
  if uc_nation=nation_russian then
    begin
      vc_chassis  = ru_heavy_tracked;
      vc_weapon   = ru_bulldozer;
    end
  else
    begin
      vc_chassis  = us_heavy_tracked;
      vc_weapon   = us_bulldozer;
    end;

    case pos of
  1: uc_direction:=2;
  2: uc_direction:=3;
  3: uc_direction:=0;
  4: uc_direction:=5;
    end;
  PlaceUnitXYR(CreateVehicle,x,y,r,false);

  if nation then
    uc_nation:=nation;
end;

// prepares units of specified side
function prepare_side(side);
var pos,x,y,i,r,
    sol,br,dep,
    neng,nsci,nmech,nsol;
begin
  // position of side
  pos:=Side_Positions[side];

  // sets global uc parameters
  uc_nation:=Side_Nations[side];
  uc_side:=side;

  x:=depot_def[pos][1];
  y:=depot_def[pos][2];

  if is_depot then              // create depot and place starting resources to it
    begin
      bc_type=b_depot;
      dep:=CreateAndPlaceBuildingXYD(x,y,Depot_Def[pos][3]);

      SetResourceType(GetBase(dep),mat_cans,starting_resources[mat_cans]);
      SetResourceType(GetBase(dep),mat_oil,starting_resources[mat_oil]);
      SetResourceType(GetBase(result),mat_siberit,starting_resources[mat_siberit]);
    end
  else                          // eventualy only place starting resources
    begin
      for i:=1 to 3 do
        begin
          r:=starting_resources[i];
          while r>=10 do
            if r>50 then
              begin
                CreateResourcesXYR(i,5,x,y,4,false);
                r:=r-50;
              end
            else
              begin
                CreateResourcesXYR(i,r div 10,x,y,4,false);
                r:=0;
              end;
         end;
    end;

  x:=start_def[pos][1];
  y:=start_def[pos][2];

  // create starting crates, in starting_crates are distances from starting position
  for r in starting_crates do
    CreateResourcesXYR(mat_cans,5,x,y,r,false);

  // eventualy place flag
  if def_morale_flags then
    battle_flags_id:=battle_flags_id ^ SetBattleFlag(side,x,y,[ [bfo_defend_bonus_human,100],
                                                                [bfo_defend_bonus_vehicle,50],
                                                                [bfo_defend_bonus_building,20],
                                                                [bfo_height,100] ]);
  // this is common algorithm to divide any amount of people
  neng:=number_of_people;

  // there must be soldier for each breastwork...
  nsol:=neng div 4;

  neng:=neng-nsol;

  // at least one scientist...
  nsci:=neng div 3;
  if nsci<1 then
    nsci:=1;
  neng:=neng-nsci;

  nmech:=neng div 2;
  neng:=neng-nmech;

  // at least one engineer (even if this means to increase amount of people)
  if neng<1 then neng:=1;

  x:=start_def[pos][1];
  y:=start_def[pos][2];

  // no depot, then player needs buldozer
  if not is_depot then
    prepare_buldozer(x,y,2,pos);

  // first will be the commander
  commander:=true;
  prepare_people(side,1,class_soldier,x,y,5,commander);
  commander:=false;

  // place remaining soldiers and other people to the flag
  prepare_people(side,nsol-1,class_soldier,x,y,5,commander);
  prepare_people(side,neng,class_engineer,x,y,5,commander);
  prepare_people(side,nmech,class_mechanic,x,y,5,commander);
  prepare_people(side,nsci,class_scientistic,x,y,5,commander);

  if not global_defined then
    global_defined:=true;

  if def_siberite_detection and GetTech(tech_sibdet,side) = state_enabled then
    SetTech(tech_SibDet,side,state_researched);

  if def_siberite_bomb = 1 then
  begin
    SetTech(tech_SibFiss,side,state_enabled);
    SetTech(73,side,state_enabled);
  end
  else
  begin
    SetTech(tech_SibFiss,side,state_disabled);
    SetTech(73,side,state_disabled);
  end;

  SetTech(tech_artifact,side,state_disabled);
end;

every 0$1 do
if (def_siberite_bomb > 1) then
begin
    wait( siberite_bomb_Delay );  // can't be 0
    EnableSibFiss;
end;

function EnableSibFiss;
var i;
begin
  for i:=1 to 8 do
    if Side_Positions[i] then
    begin
      SetTech(tech_SibFiss,i,state_enabled);
      SetTech(73,i,state_enabled);
    end;
end;

// prepare all sides with nonzero position
function prepare_sides;
var i;
begin
  global_units:=[];
  global_defined:=false;

  for i:=1 to 8 do
    if Side_Positions[i] then
      prepare_side(i);
end;


starting
begin
  Disable(98);  // YouWin (Team war)
  Disable(99);  // YouWin (Kill 'em all)

  Disable(400); // SuddenLost
  Disable(401); // SuddenWin

  mp_selectmsg:=true;

  //------
  read_multiplayer_and_game_parameters;
  init_map;
  set_shared_visions_and_alliances;

  ResetFog;
  ClearAllFogForSide(Player_Side);

  prepare_sides;
  Init_Win_Condition;

  //------
  init_shipments;
  init_respawn;

  InitApeman;   

  //------
  your_side:=Player_Side;

  music_nat:=Side_Nations[your_side]; 
  
  if IAmSpec then
    begin
      //PlaceSeeing(0, 0, Your_Side, -32767);
      fogOff(true);
      CenterNowOnXY(104, 69);
      Enable(400);
    end
  else
    begin
      CenterNowOnXY(start_def[Side_Positions[your_side]][1],start_def[Side_Positions[your_side]][2]);
    end;

  BuildUpAreas:= [nw, ne, sw, se];
  BeginBuildUp;           
end;
