//Note, this section Set Tags 11-18

var FLAGY;
EXPORT FLAGY_AREA;
EXPORT FLAGY_XY;
EXPORT FLAGY_AREA1;
var teams_p;
var WFT_Goal;
Export WFT_Points_MP;  //MP = Multiplikator 3*MP
var WFT_FlagOnTop;
var WFT_FlagHeight;

// umisteni flag na zacatku
EXPORT function Init_WarForTerritory;
var flag,i,p;
begin
  if not def_WarForTerritory then
    exit;

  FLAGY = [];
  WFT_FlagOnTop = [];
  WFT_FlagHeight = [];
  teams_p=[0,0,0,0,0,0,0,0];

  for i=1 to FLAGY_AREA do
  begin
     flag = SetBattleFlag(0,FLAGY_XY[i][1],FLAGY_XY[i][2],[]);
     FLAGY = FLAGY ^ flag;
     WFT_FlagOnTop = WFT_FlagOnTop ^ true;
     WFT_FlagHeight = WFT_FlagHeight ^ 100;
  end;
  if WarForTerritory_Flags then
    WFT_Goal = WarForTerritory_Flags
  else WFT_Goal = WarForTerritory_Points;

  for i=1 to flagy_area do
  begin
    SetAreaMapShow(flagy_area[i],1);
    SetAreaMapShow(flagy_area1[i],5);
    for p = 1 to 8 do
      PlaceSeeing(flagy_xy[i][1],flagy_xy[i][2],p,1);
  end;

  if WFT_Points_MP < 1 then
    WFT_Points_MP = 1;
  enable(60);
end;
{
//ChangeBattleFlagSide(15, 501)
EVERY 0$1 MARKED 60 DO
VAR i,p,pom,pom1;
VAR side;
begin
  zkontroluj_body;
  for i:=1 to Flagy_Area do
    begin
      side=0;
      pom=FilterUnitsInArea(FLAGY_AREA[i],[[f_type,unit_human]]);
      if pom>0 then
        begin
          side=GetSide(pom[1]);
          pom1=FilterUnitsInArea(FLAGY_AREA1[i],[[f_side,side],[f_type,unit_building]]);
          for p in pom1 do
            if BuildingStatus(p) = bs_build then
              pom1 = pom1 diff p;
          if pom1>0 and budovy_ok(pom1) then
            begin
              zmen_vlajku(i,side);
            end;
        end;
    end;
  enable;
end;
}


EVERY 0$1 MARKED 60 DO
VAR i,p,pom,pom1;
VAR side,sideNumber,flagSide;
begin
  zkontroluj_body;
  for i:=1 to flagy+0 do
    begin
      sideNumber = 0;
      for p=1 to 8 do
        begin

          pom=FilterUnitsInArea(FLAGY_AREA1[i],[f_side,p]);
          if pom>0 then
          begin
            side = getSide(pom[1]);
            sideNumber = sideNumber +1;
          end;
        end;

      if sideNumber=1 then
        begin

          flagSide = getBattleFlagSide(FLAGY[i]);
          if flagSide = side then
          begin

            if WFT_FlagHeight[i] < 100 then
            begin
              WFT_FlagHeight = replace(WFT_FlagHeight,i,WFT_FlagHeight[i]+10);
              ChangeBattleFlagOptions(FLAGY[i],[[bfo_height,WFT_FlagHeight[i]] ]);
            end
            else
              WFT_FlagOnTop = replace(WFT_FlagOnTop,i,true);

          end
          else
          begin

            if WFT_FlagHeight[i] > 0 then
            begin
              WFT_FlagHeight = replace(WFT_FlagHeight,i,WFT_FlagHeight[i]-10);
              ChangeBattleFlagOptions(FLAGY[i],[[bfo_height,WFT_FlagHeight[i]] ]);
            end
            else
            begin
              zmen_vlajku(i,side);
              WFT_FlagOnTop = replace(WFT_FlagOnTop,i,false);
            end;

          end;

      end
      else
      if sideNumber = 0 then
      begin
        if getBattleFlagSide(FLAGY[i]) <> 0 then
        begin
          if WFT_FlagHeight[i] > 0 and WFT_FlagHeight[i] < 100 then
          begin
            if WFT_FlagOnTop[i] then
              WFT_FlagHeight = replace(WFT_FlagHeight,i,WFT_FlagHeight[i]+10)
            else
              WFT_FlagHeight = replace(WFT_FlagHeight,i,WFT_FlagHeight[i]-10);
            ChangeBattleFlagOptions(FLAGY[i],[[bfo_height,WFT_FlagHeight[i]] ]);
          end
          else
          if WFT_FlagHeight[i] = 0 and getBattleFlagSide(FLAGY[i]) <> 0 then
            zmen_vlajku(i,0);
        end
        else
        if WFT_FlagHeight[i] < 100 then
        begin
          if not WFT_FlagOnTop[i] then
            WFT_FlagOnTop = replace(WFT_FlagOnTop,i,true);
          WFT_FlagHeight = replace(WFT_FlagHeight,i,WFT_FlagHeight[i]+10);
          ChangeBattleFlagOptions(FLAGY[i],[[bfo_height,WFT_FlagHeight[i]] ]);
        end;

      end;
    end;
  enable;
end;

function zmen_vlajku(pozice,side);
var i;
begin
  // check if flags isn't out of range
  if FLAGY[pozice] and side >= 0 and side <= 8 then
    changeBattleFlagSide(FLAGY[pozice], side);
end;

// vkladani hodnoty na urcitou polozku seznamu
EXPORT function vloz_na_pozici(co,cislo,pozice);
VAR ii;
VAR pom;
begin
  pom=[];
  for ii:=1 to pozice do
    if ii<>cislo then pom=pom^pozice[ii]
                 else pom=pom^co;
  result:=pom;
end;

// testovani, jeslti je uz alespon jedna budova v poøádku
function budovy_ok(bud);
VAR a;
VAR i;
begin
  a=false;
  for i in bud do if IsOK(i) then a=true;
  result:=a;
end;


// lost a win s praporkama !!!
EVERY 0$3 MARKED 60 DO
VAR i,j;
VAR pom, goal, p;
begin

  if WarForTerritory_points then
    goal = WFT_Goal * (3 * WFT_Points_MP)
  else goal = WFT_goal;

 // DebugStrings = [[ teams_p[player_team] ,goal, wft_goal, GetGameEnded]] ^ [teams_p];

  for i:=1 to teams_p do
    if teams_p[i]>= Goal then
    begin
   //  DebugStrings = DebugStrings ^ [[i,teams_p[i],goal,wft_goal]];
     if not Team_Game then
       begin
        if i=your_side then
          Enable(401)
        else
          Enable(400);
       end
     else
       if i = Player_Team then
          Enable(401)
        else
          Enable(400);

     if WarForTerritory_points then
     begin
       for p = 1 to side_positions do
         if Side_Positions[p] then
         //SetMultiScore(i, GetTag(i+20) div (3 * WFT_points_MP))
           SetSharedMultiScore(p, GetTag(p+20) div (3 * WFT_points_MP),3);
      end
     else
       for p = 1 to side_positions do
         if Side_Positions[p] then
           SetSharedMultiScore(p, GetTag(i+20)*1000,3);
         //SetMultiScore(i, GetTag(i+20));

     MakeGameEnd;
     exit;
   end;

  enable;
end;


// spocitani praporek a bodù
function zkontroluj_body;
var side,list,un,red,blue,yel,green,i,pom;
begin
 list = [0,0,0,0,0,0,0,0];

 red=0;
 blue=0;
 yel=0;
 green=0;

 if WarForTerritory_flags then
 begin
   for i=1 to FLAGY+0 do
    if WFT_FlagOnTop[i] then
    begin
      pom=GetBattleFlagSide(FLAGY[i]);
      list=vloz_na_pozici(list[pom]+1,pom,list);
    end;

   if not Team_Game then
     teams_p=list
   else
   begin
    for i in Teams[1] do
      red = red + list[i];
    for i in Teams[2] do
      blue = blue + list[i];
    for i in Teams[3] do
        yel = yel+ list[i];
    for i in Teams[4] do
        green = green + list[i];

     teams_p=[red,blue,yel,green];
   end;

   for i=1 to list do
     SetTag(i+20,list[i]);
 end
 else if WarForTerritory_points then
 begin
   for i=1 to FLAGY+0 do
    if WFT_FlagOnTop[i] then
    begin
      pom=GetBattleFlagSide(FLAGY[i]);
      list=vloz_na_pozici(list[pom]+1,pom,list);
    end;

   if not Team_Game then
     for i = 1 to side_positions do
       teams_p=vloz_na_pozici(teams_p[i]+(list[i]),i,teams_p)
   else
   begin
    for i in Teams[1] do
      red = red + list[i];
    for i in Teams[2] do
      blue = blue + list[i];
    for i in Teams[3] do
        yel = yel+ list[i];
    for i in Teams[4] do
        green = green + list[i];

     teams_p=[teams_p[1] + red, teams_p[2] + blue, teams_p[3] + yel, teams_p[4] + green];

   end;

   for i=1 to list do
     SetTag(i+20,getTag(i+20)+list[i]);
 end;


  if WarForTerritory_points then
    begin
    for i = 1 to side_positions do
      if Side_Positions[i] then
        SetSharedMultiScore(i, GetTag(i+20) div (3 * WFT_points_MP),3);
    end
  else
    for i = 1 to side_positions do
      if Side_Positions[i] then
        SetSharedMultiScore(i, GetTag(i+20)*1000,3);


 show_points;
end;

// Displays all scores for all players
function show_points;
var side,vypis,i,red,blue,yel,green,s;
begin
  vypis:=[];
  red=0;
  blue=0;
  yel=0;
  green=0;


  if WarForTerritory_flags then
  begin
    if def_public_score or isSGUI then
    begin
      if not Team_Game then
        begin
          //s = '{';
          s = [];
          for side=1 to Side_Positions do
            if Side_Positions[side] then
            begin
              vypis:=vypis ^ ['#WarForTerritory-Flags-Public',side,side,teams_p[side],WFT_Goal];
              //s = s & teams_p[side] & ',';
              s = s ^ teams_p[side];
            end
            else
               s = s ^ 0;


           //s = s& '}';
           //ToLua('updateScorePieces(3,' & s & ');');
           LScore_Update_Peices(3,s);
        end
      else
        begin

          if Teams[1] then
            vypis:= vypis ^ ['#WarForTerritory-Flags-Public-red',3,teams_p[1],WFT_Goal];
          if Teams[2] then
            vypis:= vypis ^ ['#WarForTerritory-Flags-Public-blue',1,teams_p[2],WFT_Goal] ;
        if Teams[3] then
             vypis:= vypis ^ ['#WarForTerritory-Flags-Public-yell',2,teams_p[3],WFT_Goal] ;
          if Teams[4] then
             vypis:= vypis ^ ['#WarForTerritory-Flags-Public-green',7,teams_p[4],WFT_Goal] ;

            //ToLua('updateScorePieces(3,{' & teams_p[2] & ',' & teams_p[3] & ',' & teams_p[1] &',0,0,0,' & teams_p[4] &',0});');
          LScore_Update_Peices(3,[teams_p[2] , teams_p[3] , teams_p[1] ,0,0,0, teams_p[4] ,0]);
       end;
     end
   else
     begin
       if not Team_Game then
       begin
         vypis:=vypis ^ ['#WarForTerritory-Flags-Private',your_side,your_side,teams_p[side],WFT_Goal];
       end
     else
       begin

         if your_side in Teams[1] then
           vypis:= ['#WarForTerritory-points-Flags-red',3,teams_p[1],WFT_Goal];
         if your_side in Teams[2] then
           vypis:= ['#WarForTerritory-points-Flags-blue',1,teams_p[2],WFT_Goal] ;
         if your_side in Teams[3] then
           vypis:= ['#WarForTerritory-points-Flags-yell',2,teams_p[3],WFT_Goal] ;
         if your_side in Teams[4] then
           vypis:= ['#WarForTerritory-points-Flags-green',7,teams_p[4],WFT_Goal] ;
       end;
    end;
  end
  else
    if def_public_score or isSGUI then
    begin
      if not Team_Game then
        begin
          for side=1 to Side_Positions do
            if Side_Positions[side] then
            begin
              vypis:=vypis ^ ['#WarForTerritory-points-Public',side,side,teams_p[side] div (3 * WFT_Points_MP) ,WFT_Goal];
              //ToLua('updateScorePoints(3,'& side & ','  & (teams_p[side] div (3 * WFT_Points_MP)) & ');');
              LScore_Update_Points(3,side,(teams_p[side] div (3 * WFT_Points_MP)) );
            end;
        end
      else
        begin

          if Teams[1] then
            vypis:= vypis ^ ['#WarForTerritory-points-Public-red',3,teams_p[1] div (3 * WFT_Points_MP),WFT_Goal];
          if Teams[2] then
            vypis:= vypis ^ ['#WarForTerritory-points-Public-blue',1,teams_p[2] div (3 * WFT_Points_MP),WFT_Goal] ;
          if Teams[3] then
             vypis:= vypis ^ ['#WarForTerritory-points-Public-yell',2,teams_p[3] div (3 * WFT_Points_MP),WFT_Goal] ;
          if Teams[4] then
             vypis:= vypis ^ ['#WarForTerritory-points-Public-green',7,teams_p[4] div (3 * WFT_Points_MP),WFT_Goal] ;

          s = [3,1,2,7];
          for i = 1 to 4 do
            LScore_Update_Points(3,s[i],(teams_p[i] div (3 * WFT_Points_MP)) );

        end;
    end
  else
    if not Team_Game then
      begin
        vypis:=vypis ^ ['#WarForTerritory-points-Private',your_side,your_side,teams_p[side] div (3 * WFT_Points_MP),WFT_Goal]
      end
    else
      begin

        if your_side in Teams[1] then
           vypis:= ['#WarForTerritory-points-Public-red',3,teams_p[1] div (3 * WFT_Points_MP) ,WFT_Goal];
        if your_side in Teams[2] then
           vypis:= ['#WarForTerritory-points-Public-blue',1,teams_p[2] div (3 * WFT_Points_MP) ,WFT_Goal] ;
        if your_side in Teams[3] then
           vypis:= ['#WarForTerritory-points-Public-yell',2,teams_p[3] div (3 * WFT_Points_MP) ,WFT_Goal] ;
        if your_side in Teams[4] then
           vypis:= ['#WarForTerritory-points-Public-green',7,teams_p[4] div (3 * WFT_Points_MP) ,WFT_Goal] ;
      end;

  Display_WFG:=vypis;
end;